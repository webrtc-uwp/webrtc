{
  "comments": [
    {
      "key": {
        "uuid": "ee19571d_7c1718fb",
        "filename": "api/BUILD.gn",
        "patchSetId": 5
      },
      "lineNbr": 222,
      "author": {
        "id": 5126
      },
      "writtenOn": "2017-09-23T18:23:13Z",
      "side": 1,
      "message": "\"public\"—see https://bugs.chromium.org/p/webrtc/issues/detail?id\u003d8255",
      "range": {
        "startLine": 222,
        "startChar": 2,
        "endLine": 222,
        "endChar": 9
      },
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5898a92c_d403b291",
        "filename": "api/BUILD.gn",
        "patchSetId": 5
      },
      "lineNbr": 222,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-09-25T07:47:05Z",
      "side": 1,
      "message": "Tried changing \"sources\" to \"public\", without quite knowing what the implications are.\n\nThat gives me a presubmit error, \nHeader file /usr/local/google/home/nisse/hack/webrtc/src/api/refcountedbase.h is not listed in any GN target.\n  Please create a target or add it to an existing one in /usr/local/google/home/nisse/hack/webrtc/src/api/BUILD.gn\n\nSo either I\u0027m doing it wrong, or presubmit doesn\u0027t understand \"public\".",
      "parentUuid": "ee19571d_7c1718fb",
      "range": {
        "startLine": 222,
        "startChar": 2,
        "endLine": 222,
        "endChar": 9
      },
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abb90ec9_2ea08200",
        "filename": "api/BUILD.gn",
        "patchSetId": 5
      },
      "lineNbr": 222,
      "author": {
        "id": 5126
      },
      "writtenOn": "2017-09-25T08:47:07Z",
      "side": 1,
      "message": "I\u0027m pretty sure this is a bug in the presubmit script: https://bugs.chromium.org/p/webrtc/issues/detail?id\u003d8277\n\nFor now, you can bypass the presubmit warning, or just go with \"sources\"---whichever you feel like. The former is more right, while the latter is more convenient. :-)",
      "parentUuid": "5898a92c_d403b291",
      "range": {
        "startLine": 222,
        "startChar": 2,
        "endLine": 222,
        "endChar": 9
      },
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebad1218_a3721041",
        "filename": "api/BUILD.gn",
        "patchSetId": 5
      },
      "lineNbr": 222,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-09-25T09:14:50Z",
      "side": 1,
      "message": "Changing back to |sources| + TODO comment.",
      "parentUuid": "abb90ec9_2ea08200",
      "range": {
        "startLine": 222,
        "startChar": 2,
        "endLine": 222,
        "endChar": 9
      },
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7debb2fa_2df6cb86",
        "filename": "api/refcountedbase.h",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 5126
      },
      "writtenOn": "2017-09-23T18:23:13Z",
      "side": 1,
      "message": "rtc for now, for consistency with nearby code. We may want to stop using rtc eventually, but perhaps not in this CL.",
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3237057a_621e88d8",
        "filename": "api/refcountedbase.h",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-09-25T07:47:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7debb2fa_2df6cb86",
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4118693_5017cb72",
        "filename": "api/refcountedbase.h",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 5126
      },
      "writtenOn": "2017-09-23T18:23:13Z",
      "side": 1,
      "message": "In RefCountInterface(), both of these return int. But scoped_refptr doesn\u0027t use the return value, so letting it be void here seems like a good idea.",
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "780bdbee_0cb26fae",
        "filename": "api/refcountedbase.h",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-09-25T07:47:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e4118693_5017cb72",
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "38d868df_94c37486",
        "filename": "api/refcountedbase.h",
        "patchSetId": 5
      },
      "lineNbr": 28,
      "author": {
        "id": 5126
      },
      "writtenOn": "2017-09-23T18:23:13Z",
      "side": 1,
      "message": "scoped_refptr doesn\u0027t seem to need it, so leave it out for now.",
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3469af9a_ee054db4",
        "filename": "api/refcountedbase.h",
        "patchSetId": 5
      },
      "lineNbr": 28,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-09-25T07:47:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "38d868df_94c37486",
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "caab62f4_71e7ea1e",
        "filename": "modules/desktop_capture/mac/desktop_configuration_monitor.h",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 5126
      },
      "writtenOn": "2017-09-23T18:23:13Z",
      "side": 1,
      "message": "The destructor can be public, right? Because this class doesn\u0027t have subclasses? (Consider proving this by making the class final.)",
      "range": {
        "startLine": 42,
        "startChar": 1,
        "endLine": 42,
        "endChar": 10
      },
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76175fe4_e422c436",
        "filename": "modules/desktop_capture/mac/desktop_configuration_monitor.h",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-09-25T07:47:05Z",
      "side": 1,
      "message": "The point of a non-public destructor is to rule out explicit delete, and force all destruction to go via Release.\n\nI don\u0027t want to use final lightly, since it rules out test subclasses which is a common pattern in webrtc (including gmock classes).",
      "parentUuid": "caab62f4_71e7ea1e",
      "range": {
        "startLine": 42,
        "startChar": 1,
        "endLine": 42,
        "endChar": 10
      },
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2d05916_d4914516",
        "filename": "modules/desktop_capture/mac/desktop_configuration_monitor.h",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 5126
      },
      "writtenOn": "2017-09-25T08:47:07Z",
      "side": 1,
      "message": "Ah, you\u0027re right about the forcing all destruction to go via Release() thing.\n\nRegarding `final`—my personal position is that one *should* be trigger-happy with `final`, since it\u0027s good for code readability and easy to revert—and since implementation inheritance is so often a bad idea anyway. But I\u0027m fine without `final` here too.",
      "parentUuid": "76175fe4_e422c436",
      "range": {
        "startLine": 42,
        "startChar": 1,
        "endLine": 42,
        "endChar": 10
      },
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81944f65_e54007e8",
        "filename": "modules/desktop_capture/mac/full_screen_chrome_window_detector.h",
        "patchSetId": 5
      },
      "lineNbr": 45,
      "author": {
        "id": 5126
      },
      "writtenOn": "2017-09-23T18:23:13Z",
      "side": 1,
      "message": "private, final? (see earlier comment)",
      "range": {
        "startLine": 45,
        "startChar": 1,
        "endLine": 45,
        "endChar": 10
      },
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f08f68f9_8fa89d34",
        "filename": "modules/desktop_capture/x11/shared_x_display.h",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 5126
      },
      "writtenOn": "2017-09-23T18:23:13Z",
      "side": 1,
      "message": "private, final? (see earlier comment)",
      "range": {
        "startLine": 66,
        "startChar": 1,
        "endLine": 66,
        "endChar": 10
      },
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc1a1a4b_2c223728",
        "filename": "rtc_base/refcountedobject.h",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 5126
      },
      "writtenOn": "2017-09-23T18:23:13Z",
      "side": 1,
      "message": "Fiat? We could probably just do it, and it\u0027d probably just work, except if third parties have implemented RefCountedInterface manually.",
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "298ba52a_c76c8d3c",
        "filename": "rtc_base/refcountedobject.h",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-09-25T07:47:05Z",
      "side": 1,
      "message": "I\u0027ll give it a try (and also tweak RefCounter return values accordingly).\n\nSome problems...\n\nThe test RefCountedObject.Basic uses return values, and fails to compile. Not sure if I should try to expose refcounts for testing. Or maybe I can rewrite the test to only have expectations on HasOneRef being true or false.\n\nMore interesting cases are TransportController::DestroyDtlsTransport_n, with the test\n\n  if ((*it)-\u003eRelease() \u003e 0) {\n    return;\n  }\n  channels_.erase(it);\n\nand TransportController::DestroyAllChannels_n,\n\n    // Even though these objects are normally ref-counted, if\n    // TransportController is deleted while they still have references, just\n    // remove all references.\n    while (channel-\u003eRelease() \u003e 0) {\n    }\n\nNo idea why we do this. I guess the latter loop could also be rewritten in terms of HasOneRef.\n\nAnd then there are tests setting up expectations for AddRef and Release, in particular, AdmSetupExpectations in webrtcvoiceengine_unittests.\n\nSo if we want to go through with this, maybe that should be yet another preparatory cl, and send out a webrtc PSA pretty soon.",
      "parentUuid": "dc1a1a4b_2c223728",
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83d07e3c_3799062a",
        "filename": "rtc_base/refcountedobject.h",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 5126
      },
      "writtenOn": "2017-09-25T08:47:07Z",
      "side": 1,
      "message": "I don\u0027t quite see what the first code snippet is doing---keeping a non-owning pointer to the object after releasing it unless we just dropped the last reference and destroyed it? That sounds very unsafe---if we have a non-owning pointer, we must know for sure that someone else is keeping it alive.\n\nSimilar for the second snippet. It looks like it\u0027s dropping references to the object repeatedly until the number of references goes to zero, but owning a variable number of references to an object seems like a sketchy thing to do, as does dropping references you don\u0027t own.\n\nMy guess is that both pieces of code are buggy, or bugs waiting to happen.",
      "parentUuid": "298ba52a_c76c8d3c",
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc708fd4_422268ff",
        "filename": "rtc_base/refcountedobject.h",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-09-25T09:14:50Z",
      "side": 1,
      "message": "Both snippets look very fishy to me. Cleaning them up should also aid transition to std::shared_ptr, if we ever do that (btw, is the HasOneRef hack possible with shared_ptr?).\n\nFor the latter snippet, I would guess that the idea is that we own all references, indirectly via objects which are also being destroyed (and for some reason not dropping their references by themselves.).",
      "parentUuid": "83d07e3c_3799062a",
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e5f0ad4_72f310cc",
        "filename": "rtc_base/refcounter.h",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 5126
      },
      "writtenOn": "2017-09-23T18:23:13Z",
      "side": 1,
      "message": "You\u0027ve made the ref counter a mutable class member in both places where you use it above. That means you don\u0027t have to make the ref count mutable here and make these methods const.\n\n(You could go the other way and keep the \"mutable\" only in this class, but I like the other solution better.)",
      "range": {
        "startLine": 21,
        "startChar": 15,
        "endLine": 21,
        "endChar": 20
      },
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba448268_f47165c1",
        "filename": "rtc_base/refcounter.h",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-09-25T07:47:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4e5f0ad4_72f310cc",
      "range": {
        "startLine": 21,
        "startChar": 15,
        "endLine": 21,
        "endChar": 20
      },
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55dd3292_ea7ab7cc",
        "filename": "rtc_base/refcounter.h",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 5126
      },
      "writtenOn": "2017-09-23T18:23:13Z",
      "side": 1,
      "message": "Consider naming these methods something other than AddRef and Release, to prevent confusion with RefCountedInterface and the protocol required by scoped_refptr. IncRef/DecRef?",
      "range": {
        "startLine": 26,
        "startChar": 6,
        "endLine": 26,
        "endChar": 13
      },
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d271dc7_d80209d1",
        "filename": "rtc_base/refcounter.h",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-09-25T07:47:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "55dd3292_ea7ab7cc",
      "range": {
        "startLine": 26,
        "startChar": 6,
        "endLine": 26,
        "endChar": 13
      },
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4e09d77_0c4b9961",
        "filename": "rtc_base/refcounter.h",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 5126
      },
      "writtenOn": "2017-09-23T18:23:13Z",
      "side": 1,
      "message": "[...] act on the resource protected by the reference counter, knowing that [...]",
      "range": {
        "startLine": 32,
        "startChar": 56,
        "endLine": 32,
        "endChar": 62
      },
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d282cf8_d175bc9b",
        "filename": "rtc_base/refcounter.h",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-09-25T07:47:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f4e09d77_0c4b9961",
      "range": {
        "startLine": 32,
        "startChar": 56,
        "endLine": 32,
        "endChar": 62
      },
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5660e76d_1981937b",
        "filename": "rtc_base/refcounter.h",
        "patchSetId": 5
      },
      "lineNbr": 34,
      "author": {
        "id": 5126
      },
      "writtenOn": "2017-09-23T18:23:13Z",
      "side": 1,
      "message": "Spurious blank line.",
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b14f750d_86830629",
        "filename": "rtc_base/refcounter.h",
        "patchSetId": 5
      },
      "lineNbr": 34,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-09-25T07:47:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5660e76d_1981937b",
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "713223de_1fe4929b",
        "filename": "rtc_base/refcounter.h",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 5126
      },
      "writtenOn": "2017-09-23T18:23:13Z",
      "side": 1,
      "message": "Consider making the initial count a constructor argument, and forbidding default construction. As is, it was not obvious where this class was used if the reference counter started at 0 or 1.",
      "range": {
        "startLine": 40,
        "startChar": 36,
        "endLine": 40,
        "endChar": 37
      },
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6df54b1_4b8e954c",
        "filename": "rtc_base/refcounter.h",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-09-25T07:47:05Z",
      "side": 1,
      "message": "I\u0027m not 100% sure how it works currently, but I think objects are created with ref_count_ \u003d\u003d 0, which is incremented to 1 when the result is wrapped in a scoped_refptr.\n\nAnyway, changing as requested.",
      "parentUuid": "713223de_1fe4929b",
      "range": {
        "startLine": 40,
        "startChar": 36,
        "endLine": 40,
        "endChar": 37
      },
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d3817e0_414bc686",
        "filename": "rtc_base/refcounter.h",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 5126
      },
      "writtenOn": "2017-09-25T08:47:07Z",
      "side": 1,
      "message": "Yes, that\u0027s my understanding as well. It takes some code-digging to get to that understanding, though, and the obvious thing (to my mind) would have been for the count to be initialized to 1, hence my suggestion to make this a little more transparent.",
      "parentUuid": "d6df54b1_4b8e954c",
      "range": {
        "startLine": 40,
        "startChar": 36,
        "endLine": 40,
        "endChar": 37
      },
      "revId": "ab5042ceed4f98dff286f54c54fb98066914b862",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}