{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format

    // uwp server
    // python ./run.py -a prepare build -u hlr -p winuwp -x x64 -c release --noWrapper --clang -- hlr_userdef.py

    "version": "2.0.0",
    // "inputs": [
    //     {
    //         "id": "run_action",
    //         "type": "pickString",
    //         "options": [
    //             "prepare", "build", "clean"
    //         ],
    //         "description": "select the action for run.py"
    //     },
    //     {
    //         "id": "run_platform",
    //         "type": "pickString",
    //         "options": [
    //             "win", "winuwp"
    //         ],
    //         "description": "select the platform for run.py"
    //     },
    //     {
    //         "id": "run_arch",
    //         "type": "pickString",
    //         "options": [
    //             "x86", "x64", "arm", "arm64"
    //         ],
    //         "description": "select the CPU architecture for run.py"
    //     }
    // ],
    // default values
    // "group": "build",
    "type": "shell",
    // "problemMatcher": [],
    "problemMatcher": ["$msCompile", "$gcc"],
    // {
    //   "base": "$msCompile",
    //   "severity": "error",
    //   "pattern":
    // }
    "command": "python",
    "options": {
        "cwd": "${workspaceFolder}/../../../scripts"
    },
    "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true,
        "revealProblems": "never",
    },
    "tasks": [
      {
        "label": "echo",
        "type": "shell",
        "command": "echo ${workspaceFolder}"
      },
      // {
      //   "label": "run interactive (webrtc)",
      //   "args": [
      //     "./run.py",
      //     "-a",
      //     "${input:run_action}",
      //     "-t",
      //     "webrtc",
      //     "-p",
      //     "${input:run_platform}",
      //     "-x",
      //     "${input:run_arch}",
      //     "-c",
      //     "debug",
      //     "--noWrapper"
      //   ]
      // },
      // {
      //   "label": "run interactive (hlr)",
      //   "args": [
      //     "./run.py",
      //     "-a",
      //     "${input:run_action}",
      //     "-u",
      //     "hlr",
      //     "-p",
      //     "${input:run_platform}",
      //     "-x",
      //     "${input:run_arch}",
      //     "-c",
      //     "debug",
      //     "--noWrapper",
      //     "--",
      //     "hlr_userdef.py"
      //   ]
      // },
      // {
      //   "label": "webrtc dbg (x86): Prepare",
      //   "args": [
      //     "./run.py",
      //     "-a",
      //     "prepare",
      //     "-t",
      //     "webrtc",
      //     "-p",
      //     "win",
      //     "-x",
      //     "x86",
      //     "-c",
      //     "debug",
      //     "--noWrapper"
      //   ]
      // },
      // {
      //   "label": "webrtc dbg (x86): Prepare | Build",
      //   "dependsOn": [
      //     "webrtc dbg (x86): Prepare"
      //   ],
      //   "args": [
      //     "./run.py",
      //     "-a",
      //     "build",
      //     "-t",
      //     "webrtc",
      //     "-p",
      //     "win",
      //     "-x",
      //     "x86",
      //     "-c",
      //     "debug",
      //     "--noWrapper"
      //   ]
      // },
      // {
      //   "label": "webrtc dbg (x64): Prepare",
      //   "args": [
      //     "./run.py",
      //     "-a",
      //     "prepare",
      //     "-t",
      //     "webrtc",
      //     "-p",
      //     "win",
      //     "-x",
      //     "x64",
      //     "-c",
      //     "debug",
      //     "--noWrapper"
      //   ]
      // },
      // {
      //   "label": "webrtc dbg (x64): Prepare | Build",
      //   "dependsOn": [
      //     "webrtc dbg (x64): Prepare"
      //   ],
      //   "args": [
      //     "./run.py",
      //     "-a",
      //     "build",
      //     "-t",
      //     "webrtc",
      //     "-p",
      //     "win",
      //     "-x",
      //     "x64",
      //     "-c",
      //     "debug",
      //     "--noWrapper"
      //   ]
      // },
      // {
      //   "label": "webrtc dbg (hololens 1): Prepare",
      //   "args": [
      //     "./run.py",
      //     "-a",
      //     "prepare",
      //     "-t",
      //     "webrtc",
      //     "-p",
      //     "winuwp",
      //     "-x",
      //     "x86",
      //     "-c",
      //     "debug",
      //     "--noWrapper"
      //   ]
      // },
      // {
      //   "label": "webrtc dbg (hololens 1): Prepare | Build",
      //   "dependsOn": [
      //     "webrtc dbg (hololens 1): Prepare"
      //   ],
      //   "args": [
      //     "./run.py",
      //     "-a",
      //     "build",
      //     "-t",
      //     "webrtc",
      //     "-p",
      //     "winuwp",
      //     "-x",
      //     "x86",
      //     "-c",
      //     "debug",
      //     "--noWrapper"
      //   ]
      // },
      // {
      //   "label": "webrtc dbg (hololens 1) (clang): Prepare",
      //   "args": [
      //     "./run.py",
      //     "-a",
      //     "prepare",
      //     "-t",
      //     "webrtc",
      //     "-p",
      //     "winuwp",
      //     "-x",
      //     "x86",
      //     "-c",
      //     "debug",
      //     "--clang",
      //     "--noWrapper"
      //   ]
      // },
      // {
      //   "label": "webrtc dbg (hololens 1) (clang): Prepare | Build",
      //   "dependsOn": [
      //     "webrtc dbg (hololens 1) (clang): Prepare"
      //   ],
      //   "args": [
      //     "./run.py",
      //     "-a",
      //     "build",
      //     "-t",
      //     "webrtc",
      //     "-p",
      //     "winuwp",
      //     "-x",
      //     "x86",
      //     "-c",
      //     "debug",
      //     "--clang",
      //     "--noWrapper"
      //   ]
      // },
      // {
      //   "label": "webrtc dbg (hololens 2): Prepare",
      //   "args": [
      //     "./run.py",
      //     "-a",
      //     "prepare",
      //     "-t",
      //     "webrtc",
      //     "-p",
      //     "winuwp",
      //     "-x",
      //     "arm",
      //     "-c",
      //     "debug",
      //     "--noWrapper"
      //   ]
      // },
      // {
      //   "label": "webrtc dbg (hololens 2): Prepare | Build",
      //   "dependsOn": [
      //     "webrtc dbg (hololens 2): Prepare"
      //   ],
      //   "args": [
      //     "./run.py",
      //     "-a",
      //     "build",
      //     "-t",
      //     "webrtc",
      //     "-p",
      //     "winuwp",
      //     "-x",
      //     "arm",
      //     "-c",
      //     "debug",
      //     "--noWrapper"
      //   ]
      // },
      {
        "label": "hlr dbg (x64): Prepare",
        "args": [
          "./run.py",
          "-a",
          "prepare",
          "-u",
          "hlr",
          "-p",
          "win",
          "-x",
          "x64",
          "-c",
          "debug",
          "--noWrapper",
          "--",
          "hlr_userdef.py"
        ]
      },
      {
        "label": "hlr rel (x64): Prepare",
        "args": [
          "./run.py",
          "-a",
          "prepare",
          "-u",
          "hlr",
          "-p",
          "win",
          "-x",
          "x64",
          "-c",
          "release",
          "--noWrapper",
          "--",
          "hlr_userdef.py"
        ]
      },
      {
        "label": "hlr dbg (x64): Build",
        "args": [
          "./run.py",
          "-a",
          "build",
          "-u",
          "hlr",
          "-p",
          "win",
          "-x",
          "x64",
          "-c",
          "debug",
          "--noWrapper",
          "--",
          "hlr_userdef.py"
        ]
      },
      {
        "label": "hlr rel (x64): Build",
        "args": [
          "./run.py",
          "-a",
          "build",
          "-u",
          "hlr",
          "-p",
          "win",
          "-x",
          "x64",
          "-c",
          "release",
          "--noWrapper",
          "--",
          "hlr_userdef.py"
        ]
      },
      {
        "label": "hlr dbg (x64): Deploy",
        "command": "robocopy ${workspaceFolder}/out/hlr_win_x64_debug ${workspaceFolder}/../../../../../../../examples/unity-remoting-plugin/Packages/com.hololight.isar/Runtime/Plugins/x86_64 remoting_unity.dll remoting_unity.dll.pdb /NP /IS; if($LASTEXITCODE -lt 8) { exit 0 }"
      },
      {
        "label": "hlr rel (x64): Deploy",
        "command": "robocopy ${workspaceFolder}/out/hlr_win_x64_release ${workspaceFolder}/../../../../../../../examples/unity-remoting-plugin/Packages/com.hololight.isar/Runtime/Plugins/x86_64 remoting_unity.dll remoting_unity.dll.pdb /NP /IS; if($LASTEXITCODE -lt 8) { exit 0 }"
      },
      {
        "label": "hlr dbg (x64): Clean",
        "command": "Remove-Item -LiteralPath '${workspaceFolder}/out/hlr_win_x64_debug/remoting*' -Force"
      },
      {
        "label": "hlr rel (x64): Clean",
        "command": "Remove-Item -LiteralPath '${workspaceFolder}/out/hlr_win_x64_release/remoting*' -Force"
      },
      {
        "label": "hlr dbg (x64): Prepare | Build",
        "dependsOn": [
          "hlr dbg (x64): Prepare",
          "hlr dbg (x64): Build"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr rel (x64): Prepare | Build",
        "dependsOn": [
          "hlr rel (x64): Prepare",
          "hlr rel (x64): Build"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr dbg (x64): Clean | Prepare | Build",
        "dependsOn": [
          "hlr dbg (x64): Clean",
          "hlr dbg (x64): Prepare",
          "hlr dbg (x64): Build"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr rel (x64): Clean | Prepare | Build",
        "dependsOn": [
          "hlr rel (x64): Clean",
          "hlr rel (x64): Prepare",
          "hlr rel (x64): Build"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr dbg (x64): Build | Deploy",
        "dependsOn": [
          "hlr dbg (x64): Build",
          "hlr dbg (x64): Deploy"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr rel (x64): Build | Deploy",
        "dependsOn": [
          "hlr rel (x64): Build",
          "hlr rel (x64): Deploy"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr dbg (x64): Prepare | Build | Deploy",
        "dependsOn": [
          "hlr dbg (x64): Prepare",
          "hlr dbg (x64): Build",
          "hlr dbg (x64): Deploy"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr rel (x64): Prepare | Build | Deploy",
        "dependsOn": [
          "hlr rel (x64): Prepare",
          "hlr rel (x64): Build",
          "hlr rel (x64): Deploy"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr dbg (x64): Clean | Prepare | Build | Deploy",
        "dependsOn": [
          "hlr dbg (x64): Clean",
          "hlr dbg (x64): Prepare",
          "hlr dbg (x64): Build",
          "hlr dbg (x64): Deploy"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr rel (x64): Clean | Prepare | Build | Deploy",
        "dependsOn": [
          "hlr rel (x64): Clean",
          "hlr rel (x64): Prepare",
          "hlr rel (x64): Build",
          "hlr rel (x64): Deploy"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr dbg (x64) (clang): Prepare",
        "args": [
          "./run.py",
          "-a",
          "prepare",
          "-u",
          "hlr",
          "-p",
          "win",
          "-x",
          "x64",
          "-c",
          "debug",
          "--noWrapper",
          "--clang",
          "--",
          "hlr_userdef.py"
        ]
      },
      {
        "label": "hlr rel (x64) (clang): Prepare",
        "args": [
          "./run.py",
          "-a",
          "prepare",
          "-u",
          "hlr",
          "-p",
          "win",
          "-x",
          "x64",
          "-c",
          "release",
          "--noWrapper",
          "--clang",
          "--",
          "hlr_userdef.py"
        ]
      },
      {
        "label": "hlr dbg (x64) (clang): Build",
        "args": [
          "./run.py",
          "-a",
          "build",
          "-u",
          "hlr",
          "-p",
          "win",
          "-x",
          "x64",
          "-c",
          "debug",
          "--noWrapper",
          "--clang",
          "--",
          "hlr_userdef.py"
        ]
      },
      {
        "label": "hlr rel (x64) (clang): Build",
        "args": [
          "./run.py",
          "-a",
          "build",
          "-u",
          "hlr",
          "-p",
          "win",
          "-x",
          "x64",
          "-c",
          "release",
          "--noWrapper",
          "--clang",
          "--",
          "hlr_userdef.py"
        ]
      },
      {
        "label": "hlr dbg (x64) (clang): Prepare | Build",
        "dependsOn": [
          "hlr dbg (x64) (clang): Prepare",
          "hlr dbg (x64) (clang): Build"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr rel (x64) (clang): Prepare | Build",
        "dependsOn": [
          "hlr rel (x64) (clang): Prepare",
          "hlr rel (x64) (clang): Build"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr dbg (x64) (clang): Clean | Prepare | Build",
        "dependsOn": [
          "hlr dbg (x64): Clean",
          "hlr dbg (x64) (clang): Prepare",
          "hlr dbg (x64) (clang): Build"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr rel (x64) (clang): Clean | Prepare | Build",
        "dependsOn": [
          "hlr rel (x64): Clean",
          "hlr rel (x64) (clang): Prepare",
          "hlr rel (x64) (clang): Build"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr dbg (x64) (clang): Build | Deploy",
        "dependsOn": [
          "hlr dbg (x64) (clang): Build",
          "hlr dbg (x64): Deploy"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr rel (x64) (clang): Build | Deploy",
        "dependsOn": [
          "hlr rel (x64) (clang): Build",
          "hlr rel (x64): Deploy"
        ],
        "dependsOrder": "sequence",
        "problemMatcher": []
      },
      {
        "label": "hlr dbg (x64) (clang): Prepare | Build | Deploy",
        "dependsOn": [
          "hlr dbg (x64) (clang): Prepare",
          "hlr dbg (x64) (clang): Build",
          "hlr dbg (x64): Deploy"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr rel (x64) (clang): Prepare | Build | Deploy",
        "dependsOn": [
          "hlr rel (x64) (clang): Prepare",
          "hlr rel (x64) (clang): Build",
          "hlr rel (x64): Deploy"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr dbg (x64) (clang): Clean | Prepare | Build | Deploy",
        "dependsOn": [
          "hlr dbg (x64): Clean",
          "hlr dbg (x64) (clang): Prepare",
          "hlr dbg (x64) (clang): Build",
          "hlr dbg (x64): Deploy"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr rel (x64) (clang): Clean | Prepare | Build | Deploy",
        "dependsOn": [
          "hlr rel (x64): Clean",
          "hlr rel (x64) (clang): Prepare",
          "hlr rel (x64) (clang): Build",
          "hlr rel (x64): Deploy"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr dbg (x64) (uwp): Prepare",
        "args": [
          "./run.py",
          "-a",
          "prepare",
          "-u",
          "hlr",
          "-p",
          "winuwp",
          "-x",
          "x64",
          "-c",
          "debug",
          "--noWrapper",
          "--",
          "hlr_userdef.py"
        ]
      },
      {
        "label": "hlr rel (x64) (uwp): Prepare",
        "args": [
          "./run.py",
          "-a",
          "prepare",
          "-u",
          "hlr",
          "-p",
          "winuwp",
          "-x",
          "x64",
          "-c",
          "release",
          "--noWrapper",
          "--",
          "hlr_userdef.py"
        ]
      },
      {
        "label": "hlr dbg (x64) (uwp): Build",
        "args": [
          "./run.py",
          "-a",
          "build",
          "-u",
          "hlr",
          "-p",
          "winuwp",
          "-x",
          "x64",
          "-c",
          "debug",
          "--noWrapper",
          "--",
          "hlr_userdef.py"
        ]
      },
      {
        "label": "hlr rel (x64) (uwp): Build",
        "args": [
          "./run.py",
          "-a",
          "build",
          "-u",
          "hlr",
          "-p",
          "winuwp",
          "-x",
          "x64",
          "-c",
          "release",
          "--noWrapper",
          "--",
          "hlr_userdef.py"
        ]
      },
      {
        "label": "hlr dbg (x64) (uwp): Deploy",
        "command": "robocopy ${workspaceFolder}/out/hlr_winuwp_x64_debug ${workspaceFolder}/../../../../../../../examples/unity-remoting-plugin/Packages/com.hololight.isar/Runtime/Plugins/WSA/x64 remoting_unity.dll remoting_unity.dll.pdb /NP /IS; if($LASTEXITCODE -lt 8) { exit 0 }"
      },
      {
        "label": "hlr rel (x64) (uwp): Deploy",
        "command": "robocopy ${workspaceFolder}/out/hlr_winuwp_x64_release ${workspaceFolder}/../../../../../../../examples/unity-remoting-plugin/Packages/com.hololight.isar/Runtime/Plugins/WSA/x64 remoting_unity.dll remoting_unity.dll.pdb /NP /IS; if($LASTEXITCODE -lt 8) { exit 0 }"
      },
      {
        "label": "hlr dbg (x64) (uwp): Clean",
        "command": "Remove-Item -LiteralPath '$(workspaceFolder}/out/hlr_winuwp_x64_debug/remoting*' -Force"
      },
      {
        "label": "hlr rel (x64) (uwp): Clean",
        "command": "Remove-Item -LiteralPath '${workspaceFolder}/out/hlr_winuwp_x64_release/remoting*' -Force"
      },
      {
        "label": "hlr dbg (x64) (uwp): Prepare | Build",
        "dependsOn": [
          "hlr dbg (x64) (uwp): Prepare",
          "hlr dbg (x64) (uwp): Build"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr rel (x64) (uwp): Prepare | Build",
        "dependsOn": [
          "hlr rel (x64) (uwp): Prepare",
          "hlr rel (x64) (uwp): Build"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr dbg (x64) (uwp): Clean | Prepare | Build",
        "dependsOn": [
          "hlr dbg (x64) (uwp): Clean",
          "hlr dbg (x64) (uwp): Prepare",
          "hlr dbg (x64) (uwp): Build"
        ],
        "dependsOrder": "sequence",
        "problemMatcher": []
      },
      {
        "label": "hlr rel (x64) (uwp): Clean | Prepare | Build",
        "dependsOn": [
          "hlr rel (x64) (uwp): Clean",
          "hlr rel (x64) (uwp): Prepare",
          "hlr rel (x64) (uwp): Build"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr dbg (x64) (uwp): Build | Deploy",
        "dependsOn": [
          "hlr dbg (x64) (uwp): Build",
          "hlr dbg (x64) (uwp): Deploy"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr rel (x64) (uwp): Build | Deploy",
        "dependsOn": [
          "hlr rel (x64) (uwp): Build",
          "hlr rel (x64) (uwp): Deploy"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr dbg (x64) (uwp): Prepare | Build | Deploy",
        "dependsOn": [
          "hlr dbg (x64) (uwp): Prepare",
          "hlr dbg (x64) (uwp): Build",
          "hlr dbg (x64) (uwp): Deploy"
        ],
        "dependsOrder": "sequence",
        "problemMatcher": []
      },
      {
        "label": "hlr rel (x64) (uwp): Prepare | Build | Deploy",
        "dependsOn": [
          "hlr rel (x64) (uwp): Prepare",
          "hlr rel (x64) (uwp): Build",
          "hlr rel (x64) (uwp): Deploy"
        ],
        "dependsOrder": "sequence",
        "problemMatcher": []
      },
      {
        "label": "hlr dbg (x64) (uwp): Clean | Prepare | Build | Deploy",
        "dependsOn": [
          "hlr dbg (x64) (uwp): Clean",
          "hlr dbg (x64) (uwp): Prepare",
          "hlr dbg (x64) (uwp): Build",
          "hlr dbg (x64) (uwp): Deploy"
        ],
        "dependsOrder": "sequence",
        "problemMatcher": []
      },
      {
        "label": "hlr rel (x64) (uwp): Clean | Prepare | Build | Deploy",
        "dependsOn": [
          "hlr rel (x64) (uwp): Clean",
          "hlr rel (x64) (uwp): Prepare",
          "hlr rel (x64) (uwp): Build",
          "hlr rel (x64) (uwp): Deploy"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr dbg (hololens 1): Prepare",
        "args": [
          "./run.py",
          "-a",
          "prepare",
          "-u",
          "hlr",
          "-p",
          "winuwp",
          "-x",
          "x86",
          "-c",
          "debug",
          "--noWrapper",
          "--",
          "hlr_userdef.py"
        ]
      },
      {
        "label": "hlr rel (hololens 1): Prepare",
        "args": [
          "./run.py",
          "-a",
          "prepare",
          "-u",
          "hlr",
          "-p",
          "winuwp",
          "-x",
          "x86",
          "-c",
          "release",
          "--noWrapper",
          "--",
          "hlr_userdef.py"
        ]
      },
      {
        "label": "hlr dbg (hololens 1): Build",
        "args": [
          "./run.py",
          "-a",
          "build",
          "-u",
          "hlr",
          "-p",
          "winuwp",
          "-x",
          "x86",
          "-c",
          "debug",
          "--noWrapper",
          "--",
          "hlr_userdef.py"
        ]
      },
      {
        "label": "hlr rel (hololens 1): Build",
        "args": [
          "./run.py",
          "-a",
          "build",
          "-u",
          "hlr",
          "-p",
          "winuwp",
          "-x",
          "x86",
          "-c",
          "release",
          "--noWrapper",
          "--",
          "hlr_userdef.py"
        ]
      },
      {
        "label": "hlr dbg (hololens 1): Deploy",
        "command": "robocopy ${workspaceFolder}/out/hlr_winuwp_x86_debug ${workspaceFolder}/../../../../../../../examples/NativeImmersiveClient/Debug/Isar remoting.dll remoting.dll.pdb /NP /IS; if($LASTEXITCODE -lt 8) { exit 0 }"
      },
      {
        "label": "hlr rel (hololens 1): Deploy",
        "command": "robocopy ${workspaceFolder}/out/hlr_winuwp_x86_release ${workspaceFolder}/../../../../../../../examples/NativeImmersiveClient/Release/Isar remoting.dll remoting.dll.pdb /NP /IS; if($LASTEXITCODE -lt 8) { exit 0 }"
      },
      {
        "label": "hlr dbg (hololens 1): Clean",
        "command": "Remove-Item -LiteralPath '$(workspaceFolder}/out/hlr_winuwp_x86_debug/remoting*' -Force"
      },
      {
        "label": "hlr rel (hololens 1): Clean",
        "command": "Remove-Item -LiteralPath '${workspaceFolder}/out/hlr_winuwp_x86_release/remoting*' -Force"
      },
      {
        "label": "hlr dbg (hololens 1): Clean | Prepare | Build",
        "dependsOn": [
          "hlr dbg (hololens 1): Clean",
          "hlr dbg (hololens 1): Prepare",
          "hlr dbg (hololens 1): Build"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr rel (hololens 1): Clean | Prepare | Build",
        "dependsOn": [
          "hlr rel (hololens 1): Clean",
          "hlr rel (hololens 1): Prepare",
          "hlr rel (hololens 1): Build"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr dbg (hololens 1): Build | Deploy",
        "dependsOn": [
          "hlr dbg (hololens 1): Build",
          "hlr dbg (hololens 1): Deploy"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr rel (hololens 1): Build | Deploy",
        "dependsOn": [
          "hlr rel (hololens 1): Build",
          "hlr rel (hololens 1): Deploy"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr dbg (hololens 1): Clean | Prepare | Build | Deploy",
        "dependsOn": [
          "hlr dbg (hololens 1): Clean",
          "hlr dbg (hololens 1): Prepare",
          "hlr dbg (hololens 1): Build",
          "hlr dbg (hololens 1): Deploy"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr rel (hololens 1): Clean | Prepare | Build | Deploy",
        "dependsOn": [
          "hlr rel (hololens 1): Clean",
          "hlr rel (hololens 1): Prepare",
          "hlr rel (hololens 1): Build",
          "hlr rel (hololens 1): Deploy"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr dbg (hololens 2): Prepare",
        "args": [
          "./run.py",
          "-a",
          "prepare",
          "-u",
          "hlr",
          "-p",
          "winuwp",
          "-x",
          "arm",
          "-c",
          "debug",
          "--noWrapper",
          "--",
          "hlr_userdef.py"
        ]
      },
      {
        "label": "hlr rel (hololens 2): Prepare",
        "args": [
          "./run.py",
          "-a",
          "prepare",
          "-u",
          "hlr",
          "-p",
          "winuwp",
          "-x",
          "arm",
          "-c",
          "release",
          "--noWrapper",
          "--",
          "hlr_userdef.py"
        ]
      },
      {
        "label": "hlr dbg (hololens 2): Build",
        "args": [
          "./run.py",
          "-a",
          "build",
          "-u",
          "hlr",
          "-p",
          "winuwp",
          "-x",
          "arm",
          "-c",
          "debug",
          "--noWrapper",
          "--",
          "hlr_userdef.py"
        ]
      },
      {
        "label": "hlr rel (hololens 2): Build",
        "args": [
          "./run.py",
          "-a",
          "build",
          "-u",
          "hlr",
          "-p",
          "winuwp",
          "-x",
          "arm",
          "-c",
          "release",
          "--noWrapper",
          "--",
          "hlr_userdef.py"
        ]
      },
      {
        "label": "hlr dbg (hololens 2): Deploy",
        "command": "robocopy ${workspaceFolder}/out/hlr_winuwp_arm_debug ${workspaceFolder}/../../../../../../../examples/NativeImmersiveClient/ARM/Debug/Isar remoting.dll remoting.dll.pdb /NP /IS; if($LASTEXITCODE -lt 8) { exit 0 }"
      },
      {
        "label": "hlr rel (hololens 2): Deploy",
        "command": "robocopy ${workspaceFolder}/out/hlr_winuwp_arm_release ${workspaceFolder}/../../../../../../../examples/NativeImmersiveClient/ARM/Release/Isar remoting.dll remoting.dll.pdb /NP /IS; if($LASTEXITCODE -lt 8) { exit 0 }"
      },
      {
        "label": "hlr dbg (hololens 2): Clean",
        "command": "Remove-Item -LiteralPath '$(workspaceFolder}/out/hlr_winuwp_arm_debug/remoting*' -Force"
      },
      {
        "label": "hlr rel (hololens 2): Clean",
        "command": "Remove-Item -LiteralPath '${workspaceFolder}/out/hlr_winuwp_arm_release/remoting*' -Force"
      },
      {
        "label": "hlr dbg (hololens 2): Prepare | Build",
        "dependsOn": [
          "hlr dbg (hololens 2): Prepare",
          "hlr dbg (hololens 2): Build"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr rel (hololens 2): Prepare | Build",
        "dependsOn": [
          "hlr rel (hololens 2): Prepare",
          "hlr rel (hololens 2): Build"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr dbg (hololens 2): Build | Deploy",
        "dependsOn": [
          "hlr dbg (hololens 2): Build",
          "hlr dbg (hololens 2): Deploy"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr rel (hololens 2): Build | Deploy",
        "dependsOn": [
          "hlr rel (hololens 2): Build",
          "hlr rel (hololens 2): Deploy"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr dbg (hololens 2): Clean | Prepare | Build",
        "dependsOn": [
          "hlr dbg (hololens 2): Clean",
          "hlr dbg (hololens 2): Prepare",
          "hlr dbg (hololens 2): Build"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr rel (hololens 2): Clean | Prepare | Build",
        "dependsOn": [
          "hlr rel (hololens 2): Clean",
          "hlr rel (hololens 2): Prepare",
          "hlr rel (hololens 2): Build"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr dbg (hololens 2): Prepare | Build | Deploy",
        "dependsOn": [
          "hlr dbg (hololens 2): Prepare",
          "hlr dbg (hololens 2): Build",
          "hlr dbg (hololens 2): Deploy"
        ],
        "dependsOrder": "sequence",
        "problemMatcher": []
      },
      {
        "label": "hlr rel (hololens 2): Prepare | Build | Deploy",
        "dependsOn": [
          "hlr rel (hololens 2): Prepare",
          "hlr rel (hololens 2): Build",
          "hlr rel (hololens 2): Deploy"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr dbg (hololens 2): Clean | Prepare | Build | Deploy",
        "dependsOn": [
          "hlr dbg (hololens 2): Clean",
          "hlr dbg (hololens 2): Prepare",
          "hlr dbg (hololens 2): Build",
          "hlr dbg (hololens 2): Deploy"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr rel (hololens 2): Clean | Prepare | Build | Deploy",
        "dependsOn": [
          "hlr rel (hololens 2): Clean",
          "hlr rel (hololens 2): Prepare",
          "hlr rel (hololens 2): Build",
          "hlr rel (hololens 2): Deploy"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr dbg (all): Prepare",
        "dependsOn": [
          "hlr dbg (x64) (clang): Prepare",
          "hlr dbg (hololens 2): Prepare"
        ],
        "dependsOrder": "sequence",
        "problemMatcher": []
      },
      {
        "label": "hlr rel (all): Prepare",
        "dependsOn": [
          "hlr rel (x64) (clang): Prepare",
          "hlr rel (hololens 2): Prepare"
        ],
        "dependsOrder": "sequence",
        "problemMatcher": []
      },
      {
        "label": "hlr dbg (all): Build",
        "dependsOn": [
          "hlr dbg (x64) (clang): Build",
          "hlr dbg (hololens 2): Build"
        ],
        "dependsOrder": "sequence",
        "problemMatcher": []
      },
      {
        "label": "hlr rel (all): Build",
        "dependsOn": [
          "hlr rel (x64) (clang): Build",
          "hlr rel (hololens 2): Build"
        ],
        "dependsOrder": "parallel"
      },
      {
        "label": "hlr dbg & rel (all): Build",
        "dependsOn": [
          "hlr dbg (all): Build",
          "hlr rel (all): Build"
        ],
        "dependsOrder": "sequence",
        "problemMatcher": []
      },
      {
        "label": "hlr dbg (all): Deploy",
        "dependsOn": [
          "hlr dbg (x64): Deploy",
          "hlr dbg (hololens 2): Deploy"
        ],
        "dependsOrder": "parallel"
      },
      {
        "label": "hlr rel (all): Deploy",
        "dependsOn": [
          "hlr rel (x64): Deploy",
          "hlr rel (hololens 2): Deploy"
        ],
        "dependsOrder": "parallel"
      },
      {
        "label": "hlr dbg (all): Prepare | Build",
        "dependsOn": [
          "hlr dbg (x64) (clang): Prepare | Build",
          "hlr dbg (hololens 2): Prepare | Build"
        ],
        "dependsOrder": "sequence",
        "problemMatcher": []
      },
      {
        "label": "hlr rel (all): Prepare | Build",
        "dependsOn": [
          "hlr rel (x64) (clang): Prepare | Build",
          "hlr rel (hololens 2): Prepare | Build"
        ],
        "dependsOrder": "sequence",
        "problemMatcher": []
      },
      {
        "label": "hlr dbg (all): Clean | Prepare | Build",
        "dependsOn": [
          "hlr dbg (x64) (clang): Clean | Prepare | Build",
          "hlr dbg (hololens 2): Clean | Prepare | Build"
        ],
        "dependsOrder": "sequence",
        "problemMatcher": []
      },
      {
        "label": "hlr rel (all): Clean | Prepare | Build",
        "dependsOn": [
          "hlr rel (x64) (clang): Clean | Prepare | Build",
          "hlr rel (hololens 2): Clean | Prepare | Build"
        ],
        "dependsOrder": "sequence",
        "problemMatcher": []
      },
      {
        "label": "hlr dbg (all): Prepare | Build | Deploy",
        "dependsOn": [
          "hlr dbg (x64) (clang): Prepare | Build | Deploy",
          "hlr dbg (hololens 2): Prepare | Build | Deploy"
        ],
        "dependsOrder": "sequence",
        "problemMatcher": []
      },
      {
        "label": "hlr rel (all): Prepare | Build | Deploy",
        "dependsOn": [
          "hlr rel (x64) (clang): Prepare | Build | Deploy",
          "hlr rel (hololens 2): Prepare | Build | Deploy"
        ],
        "dependsOrder": "sequence",
        "problemMatcher": []
      },
      {
        "label": "hlr dbg (all): Build | Deploy",
        "dependsOn": [
          "hlr dbg (x64) (clang): Build | Deploy",
          "hlr dbg (hololens 2): Build | Deploy"
        ],
        "dependsOrder": "sequence",
        "problemMatcher": []
      },
      {
        "label": "hlr rel (all): Build | Deploy",
        "dependsOn": [
          "hlr rel (x64) (clang): Build | Deploy",
          "hlr rel (hololens 2): Build | Deploy"
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "hlr dbg (all): Clean | Prepare | Build | Deploy",
        "dependsOn": [
          "hlr dbg (x64) (clang): Clean | Prepare | Build | Deploy",
          "hlr dbg (hololens 2): Clean | Prepare | Build | Deploy"
        ],
        "dependsOrder": "sequence",
        "problemMatcher": []
      },
      {
        "label": "hlr rel (all): Clean | Prepare | Build | Deploy",
        "dependsOn": [
          "hlr rel (x64) (clang): Clean | Prepare | Build | Deploy",
          "hlr rel (hololens 2): Clean | Prepare | Build | Deploy"
        ],
        "dependsOrder": "sequence",
        "problemMatcher": []
      },
      {
        "label": "gen flatbuffers",
        "options": {
          "cwd": "${workspaceFolder}/remoting/data"
        },
        "command": "flatc",
        "args": [
          "--cpp",
          "--scoped-enums",
          "--cpp-str-flex-ctor",
          "-o",
          "remoting/",
          "api.fbs"
        ],
        "problemMatcher": []
      },
      {
        "label": "vcam: dbg x64",
        "options": {
          "cwd": "${workspaceFolder}/remoting/extras/vcam"
        },
        "command": "\"C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Auxiliary/Build/vcvars64.bat\" && msbuild",
        // "command": "%VCINSTALLDIR%\\Auxiliary\\Build\\vcvars64.bat",
        "args": [
          "vcam.sln -noLogo -t:Rebuild -p:Configuration=Debug"
        ],
        "problemMatcher": ["$msCompile"],
      },
      {
        "label": "vcam: rel x64",
        "options": {
          "cwd": "${workspaceFolder}/remoting/extras/vcam"
        },
        "command": "\"C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Auxiliary/Build/vcvars64.bat\" && msbuild",
        // "command": "%VCINSTALLDIR%\\Auxiliary\\Build\\vcvars64.bat",
        "args": [
          "vcam.sln -noLogo -t:Rebuild -p:Configuration=Release"
        ],
        "problemMatcher": ["$msCompile"],
      },
      {
        "label": "vcam: dbg x86",
        "options": {
          "cwd": "${workspaceFolder}/remoting/extras/vcam"
        },
        "command": "\"C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Auxiliary/Build/vcvars32.bat\" && msbuild",
        // "command": "%VCINSTALLDIR%\\Auxiliary\\Build\\vcvars64.bat",
        "args": [
          "vcam.sln -noLogo -t:Rebuild -p:Configuration=Debug"
        ],
        "problemMatcher": ["$msCompile"],
      },
      {
        "label": "vcam: rel x86",
        "options": {
          "cwd": "${workspaceFolder}/remoting/extras/vcam"
        },
        "command": "'C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Auxiliary/Build/vcvars32.bat' && msbuild",
        // "command": "%VCINSTALLDIR%\\Auxiliary\\Build\\vcvars64.bat",
        "args": [
          "vcam.sln -noLogo -t:Rebuild -p:Configuration=Release"
        ],
        "problemMatcher": ["$msCompile"],
      },
      {
        "label": "vcam: dbg all",
        "dependsOn": [
          "vcam: dbg x64",
          "vcam: dbg x86",
        ],
        "dependsOrder": "sequence"
      },
      {
        "label": "vcam: rel all",
        "dependsOn": [
          "vcam: rel x64",
          "vcam: rel x86",
        ],
        "dependsOrder": "sequence"
      },
      // {
      //   "label": "remoting_with_tests dbg (x64): Prepare",
      //   "args": [
      //     "./run.py",
      //     "-a",
      //     "prepare",
      //     "-u",
      //     "remoting_with_tests",
      //     "-p",
      //     "win",
      //     "-x",
      //     "x64",
      //     "-c",
      //     "debug",
      //     "--noWrapper",
      //     "./remoting_with_tests_userdef.py"
      //   ]
      // },
      // {
      //   "label": "remoting_with_tests rel (x64): Prepare",
      //   "args": [
      //     "./run.py",
      //     "-a",
      //     "prepare",
      //     "-u",
      //     "remoting_with_tests",
      //     "-p",
      //     "win",
      //     "-x",
      //     "x64",
      //     "-c",
      //     "release",
      //     "--noWrapper",
      //     "./remoting_with_tests_userdef.py"
      //   ]
      // },
      // {
      //   "label": "remoting_with_tests dbg (x64): Build",
      //   "args": [
      //     "./run.py",
      //     "-a",
      //     "build",
      //     "-u",
      //     "remoting_with_tests",
      //     "-p",
      //     "win",
      //     "-x",
      //     "x64",
      //     "-c",
      //     "debug",
      //     "--noWrapper",
      //     "./remoting_with_tests_userdef.py"
      //   ]
      // },
      // {
      //   "label": "remoting_with_tests rel (x64): Build",
      //   "args": [
      //     "./run.py",
      //     "-a",
      //     "build",
      //     "-u",
      //     "remoting_with_tests",
      //     "-p",
      //     "win",
      //     "-x",
      //     "x64",
      //     "-c",
      //     "release",
      //     "--noWrapper",
      //     "./remoting_with_tests_userdef.py"
      //   ]
      // },
      // {
      //   "label": "remoting_with_tests dbg (x64): Prepare | Build",
      //   "dependsOn": [
      //     "remoting_with_tests dbg (x64): Prepare",
      //     "remoting_with_tests dbg (x64): Build"
      //   ],
      //   "dependsOrder": "sequence"
      // },
      // {
      //   "label": "remoting_with_tests rel (x64): Prepare | Build",
      //   "dependsOn": [
      //     "remoting_with_tests rel (x64): Prepare",
      //     "remoting_with_tests rel (x64): Build"
      //   ],
      //   "dependsOrder": "sequence"
      // }
    ]
}
