{
  "comments": [
    {
      "key": {
        "uuid": "7795c3bb_2b6ce8b5",
        "filename": "webrtc/media/base/fakevideorenderer.h",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1144186
      },
      "writtenOn": "2017-06-14T07:55:53Z",
      "side": 1,
      "message": "I think I commented this on another cl, but I don\u0027t remember the conclusion. Should we use a rtc::scoped_refptr\u003cconst webrtc::I420BufferInterface\u003e here? If so, applies in several places.",
      "range": {
        "startLine": 87,
        "startChar": 23,
        "endLine": 87,
        "endChar": 29
      },
      "revId": "d33664e916f44988c5f23d30dd9a0993b843b03d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90b29706_9dbe4960",
        "filename": "webrtc/media/base/fakevideorenderer.h",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1117641
      },
      "writtenOn": "2017-06-14T10:35:48Z",
      "side": 1,
      "message": "Done, it doesn\u0027t hurt to use const here at least. I\u0027m still unused to seeing const inside rtc::scoped_refptr, because we almost never use it. I420BufferInterface is already immutable (there is no way to mutate it through the interface), so I don\u0027t care super strongly about this. One thing we could aim for is to get the interface to const for the callee:\nscoped_refptr\u003cconst I420BufferInterface\u003e ToI420() const;\nThen we need the return type to be const, so that I420Buffers can return |this| without const-casting.\n\nHowever, my priority right now is to get rid of native_handle() and the Data and Stride functions from VideoFrameBuffer.",
      "parentUuid": "7795c3bb_2b6ce8b5",
      "range": {
        "startLine": 87,
        "startChar": 23,
        "endLine": 87,
        "endChar": 29
      },
      "revId": "d33664e916f44988c5f23d30dd9a0993b843b03d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d94114cb_5e714c77",
        "filename": "webrtc/modules/video_capture/test/video_capture_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 368,
      "author": {
        "id": 1144186
      },
      "writtenOn": "2017-06-14T07:55:53Z",
      "side": 1,
      "message": "Beter to use stride rather than width, here and below.",
      "range": {
        "startLine": 368,
        "startChar": 40,
        "endLine": 368,
        "endChar": 50
      },
      "revId": "d33664e916f44988c5f23d30dd9a0993b843b03d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13ec71a6_ad079ea5",
        "filename": "webrtc/modules/video_capture/test/video_capture_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 368,
      "author": {
        "id": 1117641
      },
      "writtenOn": "2017-06-14T10:35:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d94114cb_5e714c77",
      "range": {
        "startLine": 368,
        "startChar": 40,
        "endLine": 368,
        "endChar": 50
      },
      "revId": "d33664e916f44988c5f23d30dd9a0993b843b03d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}