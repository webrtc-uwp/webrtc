{
  "comments": [
    {
      "key": {
        "uuid": "30e4db32_5c7dbabc",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 278,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T16:27:15Z",
      "side": 1,
      "message": "I think it would be cleaner to pass in the factory/resumer separate from the shared ssl_ctx.  Then the factory could own the creation of the context all of the time and pass it instead of it being created by the adapter sometimes and the factory other times.",
      "range": {
        "startLine": 278,
        "startChar": 62,
        "endLine": 278,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "676203b2_41c3b746",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 278,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T17:01:28Z",
      "side": 1,
      "message": "I am sympathetic to the idea of the factory always doing the context creation, but I didn\u0027t quite understand what you had in mind.\n\nThe simplest approach would just be to move CreateContext to the factory instead of a method on the adapter.",
      "parentUuid": "30e4db32_5c7dbabc",
      "range": {
        "startLine": 278,
        "startChar": 62,
        "endLine": 278,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3786b4f8_137eaf54",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 278,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T20:52:46Z",
      "side": 1,
      "message": "I had two things in mind:\n\n1.  Move CreateContext to the factory, as you suggest.\n\n2.  Instead of passing in a factory what has a pointer to a context (or if the factory is null, create a context from a static factory method call), let the factory create the context and pass it in.  Then the adapter never needs to create the context (same code path either way) and you don\u0027t need to pass in the whole factory.  According to your later comment about not being able to get to the factory from the callback, I guess you do need to pass in something that acts as a  session cache (you really just need the AddSession method, not the whole factory).",
      "parentUuid": "676203b2_41c3b746",
      "range": {
        "startLine": 278,
        "startChar": 62,
        "endLine": 278,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28152ff3_5135233a",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 278,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T23:28:22Z",
      "side": 1,
      "message": "One problem though is that in the no-factory case, you can\u0027t create the context until the caller calls SetFoo, SetBar, i.e., post-ctor. So the context needs to be created by the adapter itself in this case.\n\nI will plan to do #1 though.",
      "parentUuid": "3786b4f8_137eaf54",
      "range": {
        "startLine": 278,
        "startChar": 62,
        "endLine": 278,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11c4720e_f61042d7",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 278,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-19T00:40:02Z",
      "side": 1,
      "message": "The only setter actually used in this manner is set_ignore_bad_cert.  And that isn\u0027t affected by the context (the context can be created before or after).",
      "parentUuid": "28152ff3_5135233a",
      "range": {
        "startLine": 278,
        "startChar": 62,
        "endLine": 278,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "877277b9_32f218f8",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 278,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-19T01:27:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "28152ff3_5135233a",
      "range": {
        "startLine": 278,
        "startChar": 62,
        "endLine": 278,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d693a2e_844f6224",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 278,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-19T01:27:16Z",
      "side": 1,
      "message": "SetSslMode would fall into this category.",
      "parentUuid": "11c4720e_f61042d7",
      "range": {
        "startLine": 278,
        "startChar": 62,
        "endLine": 278,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cef3458_5fe15d9d",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 292,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T16:27:15Z",
      "side": 1,
      "message": "This seems kind of easy to get wrong, and I don\u0027t see an SSL_CTX_down_ref called.  Would it make sense for the factory to return an ssl_ctx wrapped in a smart pointer that does this up/down automatically?",
      "range": {
        "startLine": 292,
        "startChar": 29,
        "endLine": 292,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3bb0935_8a64d7fa",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 292,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T17:01:28Z",
      "side": 1,
      "message": "Cleanup() does this via SSL_CTX_free.\n\nUsing a bssl:: smart pointer to manage this refcount is an interesting idea, but it starts to make the change more substantial, so I opted not to do it in this rev.",
      "parentUuid": "7cef3458_5fe15d9d",
      "range": {
        "startLine": 292,
        "startChar": 29,
        "endLine": 292,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9fb8cfd2_1abd368a",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 292,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T17:31:21Z",
      "side": 1,
      "message": "But Cleanup() is called on the factory, not the adapter.  If the factory keeps the ssl_ctx alive long enough, then why bother with bumping up the ref count in the first place? Wouldn\u0027t this work without that line?",
      "parentUuid": "a3bb0935_8a64d7fa",
      "range": {
        "startLine": 292,
        "startChar": 29,
        "endLine": 292,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30e4f8a4_01df20a2",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 292,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T19:10:11Z",
      "side": 1,
      "message": "No, since Adapter::Cleanup will happen regardless, leading to a misref.",
      "parentUuid": "9fb8cfd2_1abd368a",
      "range": {
        "startLine": 292,
        "startChar": 29,
        "endLine": 292,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0a2da12_e5dc6d7e",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 292,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T20:52:46Z",
      "side": 1,
      "message": "I don\u0027t follow.  My reading of the code is that each adapter bumps up the ref count, but that Adapter::Cleanup neither bumps it down nor frees the context.  The Factory::Cleanup doesn\u0027t bump down the ref count, but jumps straight to freeing it.  Which means you would expect the count to go up, up, up, until it\u0027s freed.   But what\u0027s the point of going up, up, up?\n\nUnless there\u0027s something going on in the Adapter::Cleanup that I don\u0027t understand.  If so, what is it?",
      "parentUuid": "30e4f8a4_01df20a2",
      "range": {
        "startLine": 292,
        "startChar": 29,
        "endLine": 292,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75bf7a1a_5e11718b",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 292,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T23:28:22Z",
      "side": 1,
      "message": "Line 482 does a SSL_CTX_free. Note that \"free\" means \"decrement reference\" in BoringSSL.",
      "parentUuid": "a0a2da12_e5dc6d7e",
      "range": {
        "startLine": 292,
        "startChar": 29,
        "endLine": 292,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7591a6b_c5e03bf4",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 292,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-19T00:40:02Z",
      "side": 1,
      "message": "That\u0027s pretty subtle.  Please add a comment above the call to up_ref along the lines of \"SSL_CTX_free decrements the ref count in Cleanup()\"",
      "parentUuid": "75bf7a1a_5e11718b",
      "range": {
        "startLine": 292,
        "startChar": 29,
        "endLine": 292,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "362df5ac_52c9cf49",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 292,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-19T01:27:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7591a6b_c5e03bf4",
      "range": {
        "startLine": 292,
        "startChar": 29,
        "endLine": 292,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "900f11ac_1b8ef8a6",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 292,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-19T01:27:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "75bf7a1a_5e11718b",
      "range": {
        "startLine": 292,
        "startChar": 29,
        "endLine": 292,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d9646ea_502b88ae",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 335,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T16:27:15Z",
      "side": 1,
      "message": "Why do we need to check for \"!factory_\"?  If ssl_ctx_ is null, then factory_ has to be null also, which means you don\u0027t need the check.",
      "range": {
        "startLine": 335,
        "startChar": 29,
        "endLine": 335,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ef8b8c3_6cff07c0",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 335,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T17:01:28Z",
      "side": 1,
      "message": "It was intended as a sanity check. I will change this to a RTC_DCHECK.",
      "parentUuid": "4d9646ea_502b88ae",
      "range": {
        "startLine": 335,
        "startChar": 29,
        "endLine": 335,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86eb1a94_79b3bcd8",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 335,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-19T01:27:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6ef8b8c3_6cff07c0",
      "range": {
        "startLine": 335,
        "startChar": 29,
        "endLine": 335,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "544c8904_1d4f36b5",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 336,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T16:27:15Z",
      "side": 1,
      "message": "Please add {}s",
      "range": {
        "startLine": 336,
        "startChar": 47,
        "endLine": 336,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7a0582a_a814a332",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 336,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-19T01:27:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "544c8904_1d4f36b5",
      "range": {
        "startLine": 336,
        "startChar": 47,
        "endLine": 336,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "afa53e52_46e50ae7",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 337,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T16:27:15Z",
      "side": 1,
      "message": "Please make it clear what false means here.  I\u0027d recommend \"bool enable_cache \u003d false\" on a separate line, but \"/* enable_cache */\" could also work.  Or, better yet, make a separate EnableCache() method (see below).  Or, better yet, just pass in the context and have the factory always create it.",
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6a5010a_35428669",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 337,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-19T01:27:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "afa53e52_46e50ae7",
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9fea6cc_08c48347",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 374,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T16:27:15Z",
      "side": 1,
      "message": "Shouldn\u0027t this also be behind the \"!ssl_host_name_.empty()\"?",
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1f8b825_a2b95dba",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 374,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T17:01:28Z",
      "side": 1,
      "message": "yes, good catch",
      "parentUuid": "f9fea6cc_08c48347",
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e68448b_17258d8c",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 374,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-19T01:27:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b1f8b825_a2b95dba",
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8aeb51d_c9f28776",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 375,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T16:27:15Z",
      "side": 1,
      "message": "Why do we need to call LookupSession on the factory to get the session?  Why not just pass it into StartSSL/BeginSSL?  \n\nThe only place this whole thing is used is in BasicPacketSocketFactory::CreateClientTcpSocket, which could easily switch to calling a method like OpenSSLAdapterFactory::CreateAdapter, which knows how to both create the adapter and StartSSL with the cached session.",
      "range": {
        "startLine": 375,
        "startChar": 66,
        "endLine": 375,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "783d6d5e_2286fac2",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 375,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T17:01:28Z",
      "side": 1,
      "message": "Hmm. Can you explain more about what you have in mind?",
      "parentUuid": "c8aeb51d_c9f28776",
      "range": {
        "startLine": 375,
        "startChar": 66,
        "endLine": 375,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60a9d1f0_e2c3ab19",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 375,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T17:31:21Z",
      "side": 1,
      "message": "I\u0027m thinking it could work like this:\n\nBasicPacketSocketFactory::CreateClientTcpSocket calls\n  OpenSSLAdapterFactory::CreateAdapter which calls both\n    OpenSSLAdapter::OpenSSLAdapter and\n    OpenSSLAdapter::StartSSL while passing in a cached session, which then calls\n      SSL_set_session with the passed in session\n\nThen the session cacheing, lookup, can all be done in the factory with very little changes to the adapter code.  Meanwhile, the relationship between BasicPacketSocketFactory and the SSL code is also simplified.",
      "parentUuid": "783d6d5e_2286fac2",
      "range": {
        "startLine": 375,
        "startChar": 66,
        "endLine": 375,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91c5a10c_8e7dafad",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 375,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T19:10:11Z",
      "side": 1,
      "message": "I like that idea, and it\u0027s not too complicated. Let me take a shot at it.",
      "parentUuid": "60a9d1f0_e2c3ab19",
      "range": {
        "startLine": 375,
        "startChar": 66,
        "endLine": 375,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8180308c_5addd950",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 375,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-19T01:27:16Z",
      "side": 1,
      "message": "This turned out to be more complicated than I thought. It\u0027s not always the case that we want to start SSL immediately at adapter creation, and passing in the session requires caching it in a member var since we can\u0027t call SSL_set_session until we create the SSL, which doesn\u0027t happen until we start the handshake, which doesn\u0027t happen until the underlying stream is connected.\n\nThe actual code savings was just a single line (client doesn\u0027t need to call StartSSL anymore), so it\u0027s not clear it\u0027s worth it at this time.",
      "parentUuid": "91c5a10c_8e7dafad",
      "range": {
        "startLine": 375,
        "startChar": 66,
        "endLine": 375,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "380da72d_1c833b1e",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 378,
      "author": {
        "id": 1224374
      },
      "writtenOn": "2017-07-18T18:01:47Z",
      "side": 1,
      "message": "Do we really need to fail here? wouldn\u0027t be safer to re-establish the connection if resumption failed?",
      "range": {
        "startLine": 378,
        "startChar": 0,
        "endLine": 378,
        "endChar": 68
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fff44e29_d1455233",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 378,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T19:10:11Z",
      "side": 1,
      "message": "Let me look at SSL_set_session to understand whether it is safe to continue upon failure.",
      "parentUuid": "380da72d_1c833b1e",
      "range": {
        "startLine": 378,
        "startChar": 0,
        "endLine": 378,
        "endChar": 68
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "664abce9_ee7784c7",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 378,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-19T01:27:16Z",
      "side": 1,
      "message": "I looked and currently this method never fails. I think that if it starts failing, we will want to know about it.",
      "parentUuid": "fff44e29_d1455233",
      "range": {
        "startLine": 378,
        "startChar": 0,
        "endLine": 378,
        "endChar": 68
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e3addec_e6c87c9e",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 385,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T16:27:15Z",
      "side": 1,
      "message": "If the ssl_ctx is passed in always, then this is the only thing the adapter needs from the factory.  And if this is also pushed into the factory, the all we need is for the session to be passed in.",
      "range": {
        "startLine": 385,
        "startChar": 3,
        "endLine": 385,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7228756_af199669",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 385,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-19T01:27:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5e3addec_e6c87c9e",
      "range": {
        "startLine": 385,
        "startChar": 3,
        "endLine": 385,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7d4b426_aff42bd4",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 388,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T16:27:15Z",
      "side": 1,
      "message": "Does this need to happen after the SSL_set_session?  If so, can you leave a comment making that clear?",
      "range": {
        "startLine": 388,
        "startChar": 30,
        "endLine": 388,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "970cec56_d99416fc",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 388,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T17:01:28Z",
      "side": 1,
      "message": "We don\u0027t want to transfer ownership of the bio until we have all the initial sanity checks done.",
      "parentUuid": "f7d4b426_aff42bd4",
      "range": {
        "startLine": 388,
        "startChar": 30,
        "endLine": 388,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af2cb3d1_16fc323f",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 388,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T17:31:21Z",
      "side": 1,
      "message": "OK, can you make that clear with a comment?",
      "parentUuid": "970cec56_d99416fc",
      "range": {
        "startLine": 388,
        "startChar": 30,
        "endLine": 388,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39a3dfa1_1e46d177",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 388,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-19T01:27:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "af2cb3d1_16fc323f",
      "range": {
        "startLine": 388,
        "startChar": 30,
        "endLine": 388,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90ffef33_336f4881",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 974,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T16:27:15Z",
      "side": 1,
      "message": "It seems like this would be more cleanly a callback of the factory.",
      "range": {
        "startLine": 974,
        "startChar": 75,
        "endLine": 974,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1793320_d2f8c3ab",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 974,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T17:01:28Z",
      "side": 1,
      "message": "Not really, since it\u0027s per-SSL (which is 1:1 with adapter), not per-SSL_CTX (which is 1:1 with factory).",
      "parentUuid": "90ffef33_336f4881",
      "range": {
        "startLine": 974,
        "startChar": 75,
        "endLine": 974,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b13ec0b3_a98a97a4",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 974,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T17:31:21Z",
      "side": 1,
      "message": "There is no 1:1 between session and adapter.  It\u0027s N:1.  \n\nAnd this code transfers ownership of the session to the factory, not to the adapter.  \n\nAnd this code does nothing but stick a session into a map, which map is owned by the factory.\n\n\nSeems much more factory-oriented than adapter-oriented.",
      "parentUuid": "f1793320_d2f8c3ab",
      "range": {
        "startLine": 974,
        "startChar": 75,
        "endLine": 974,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "478a5fb9_d3d5ae10",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 974,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T19:10:11Z",
      "side": 1,
      "message": "No, but the SSL* is per-adapter, and that\u0027s where the app data comes from. i.e., I can\u0027t get the factory pointer here.",
      "parentUuid": "b13ec0b3_a98a97a4",
      "range": {
        "startLine": 974,
        "startChar": 75,
        "endLine": 974,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f22e317_d980a36d",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 974,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T20:52:46Z",
      "side": 1,
      "message": "Oh.... you can\u0027t get the factory pointer... from here, only the adapter pointer... yeah, that\u0027s  a problem that sinks my idea.  \n\nSo the adapter has to have a pointer to the factory so that this callback can get the factory from the adapter and then cache the session in the factory.  I was hoping it wasn\u0027t necessary to pass in the whole factory to the adapter, but I guess you need to pass in something that can pass the session to the cache.",
      "parentUuid": "478a5fb9_d3d5ae10",
      "range": {
        "startLine": 974,
        "startChar": 75,
        "endLine": 974,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdf44817_4efdd66d",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 974,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T23:28:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5f22e317_d980a36d",
      "range": {
        "startLine": 974,
        "startChar": 75,
        "endLine": 974,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a9e8cb5_e12ee682",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 978,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T16:27:15Z",
      "side": 1,
      "message": "WARNING?  Seems like INFO is more appropriate.",
      "range": {
        "startLine": 978,
        "startChar": 74,
        "endLine": 978,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a98e0ad5_951f8fcc",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 978,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T17:01:28Z",
      "side": 1,
      "message": "Yeah, not sure what happened there.",
      "parentUuid": "6a9e8cb5_e12ee682",
      "range": {
        "startLine": 978,
        "startChar": 74,
        "endLine": 978,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69fed802_82426ff2",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 978,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-19T01:27:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a98e0ad5_951f8fcc",
      "range": {
        "startLine": 978,
        "startChar": 74,
        "endLine": 978,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e2a9905_ac073c23",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 980,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T16:27:15Z",
      "side": 1,
      "message": "Use \";\" instead of \",\"?",
      "range": {
        "startLine": 980,
        "startChar": 68,
        "endLine": 980,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc1db0ae_b848b5c4",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 980,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-19T01:27:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6e2a9905_ac073c23",
      "range": {
        "startLine": 980,
        "startChar": 68,
        "endLine": 980,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b99c64c_46d7d391",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 981,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T16:27:15Z",
      "side": 1,
      "message": "If the map in the factory takes ownership, I think that needs to be documented clearly in the class definition in the .h.",
      "range": {
        "startLine": 981,
        "startChar": 1,
        "endLine": 981,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdd36bbe_120f5238",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 981,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-19T01:27:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b99c64c_46d7d391",
      "range": {
        "startLine": 981,
        "startChar": 1,
        "endLine": 981,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "14b3f87f_c4b7744f",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 1004,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T16:27:15Z",
      "side": 1,
      "message": "It seems like this method belongs more in the OpenSSLAdapterFactory than in the OpenSSLAdapter.",
      "range": {
        "startLine": 1004,
        "startChar": 73,
        "endLine": 1004,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "228ebdd5_67ec6e1c",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 1004,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T19:10:11Z",
      "side": 1,
      "message": "Makes sense.",
      "parentUuid": "14b3f87f_c4b7744f",
      "range": {
        "startLine": 1004,
        "startChar": 73,
        "endLine": 1004,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "554609c5_a352fce1",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 1004,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-19T01:27:16Z",
      "side": 1,
      "message": "Ugh, this also turned out to be complicated since it references all the private callback methods in OpenSSLAdapter. We could make this work, but then the callbacks would either have to thunk from the factory to the adapter, or the factory would need to know that the app data contains the adapter pointer, all of which just to change which object the CreateContext method lives on.\n\nPerhaps this could be improved by switching from SSL_CTX callback methods to SSL_ callback methods (yes, there are both!), but I\u0027m not too excited about unwinding all that logic in this CL.",
      "parentUuid": "228ebdd5_67ec6e1c",
      "range": {
        "startLine": 1004,
        "startChar": 73,
        "endLine": 1004,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "125e9709_0b2c8acf",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 1048,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T16:27:15Z",
      "side": 1,
      "message": "Why is this even in CreateContext?  Why not have a separate method that\u0027s EnableCache()?  Then instead of \"CreateContext(..., true)\" and \"CreateContext(..., false)\", you\u0027d have \"CreateContext(...)\" (unchanged) and \"CreateContext(...); EnableCache(...)\", which seems like it would be nicer.",
      "range": {
        "startLine": 1048,
        "startChar": 3,
        "endLine": 1048,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a7eb6f2_a88e7d9d",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 1048,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T17:01:28Z",
      "side": 1,
      "message": "Because this function returns a fully initialized context, so not sure how EnableCache would work in that case.",
      "parentUuid": "125e9709_0b2c8acf",
      "range": {
        "startLine": 1048,
        "startChar": 3,
        "endLine": 1048,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22a17bea_1540e4dc",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 1048,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T23:28:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2a7eb6f2_a88e7d9d",
      "range": {
        "startLine": 1048,
        "startChar": 3,
        "endLine": 1048,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e632d70_1110dea1",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 1062,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T16:27:15Z",
      "side": 1,
      "message": "So does it own them and keep them around forever, and cache and unlimited number?",
      "range": {
        "startLine": 1062,
        "startChar": 32,
        "endLine": 1062,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83d6fdd9_af41e245",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 1062,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T17:01:28Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "6e632d70_1110dea1",
      "range": {
        "startLine": 1062,
        "startChar": 32,
        "endLine": 1062,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ce5d5e9_cba68471",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 1062,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T17:31:21Z",
      "side": 1,
      "message": "That sounds like a potential leak issue.  For example, if we add support for TLS candidates, then the remote endpoint would control which TLS candidates we attempt to reach, would could be used as a mechanism for making this table grow unbounded.  Not even destroying a call/PeerConnection would free it.  \n\nPerhaps it\u0027s a small thing, but it\u0027s also simple to fix: just limit the size of the table.",
      "parentUuid": "83d6fdd9_af41e245",
      "range": {
        "startLine": 1062,
        "startChar": 32,
        "endLine": 1062,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "980eb9cd_5c3226b6",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 1062,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T19:10:11Z",
      "side": 1,
      "message": "This is only for c2s; the remote endpoint does not participate. This feels like a theoretical concern at the moment.",
      "parentUuid": "2ce5d5e9_cba68471",
      "range": {
        "startLine": 1062,
        "startChar": 32,
        "endLine": 1062,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "373d7bc3_f7f55dbd",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 1062,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T20:52:46Z",
      "side": 1,
      "message": "It is, the moment, which is why I said \"if we add support for TLS candidates\", at which time any peer could cause this to happen.",
      "parentUuid": "980eb9cd_5c3226b6",
      "range": {
        "startLine": 1062,
        "startChar": 32,
        "endLine": 1062,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63f3e639_fcb061f6",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 1062,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T23:28:22Z",
      "side": 1,
      "message": "Yes - I now understand what you were getting at. It shouldn\u0027t be too hard to add eviction, but I will probably do this in the followup where I wire this into BPSF.",
      "parentUuid": "373d7bc3_f7f55dbd",
      "range": {
        "startLine": 1062,
        "startChar": 32,
        "endLine": 1062,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cba51244_950f5add",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 1062,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-19T01:27:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "63f3e639_fcb061f6",
      "range": {
        "startLine": 1062,
        "startChar": 32,
        "endLine": 1062,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4cc54e84_39b3f658",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 1094,
      "author": {
        "id": 1224374
      },
      "writtenOn": "2017-07-18T18:01:47Z",
      "side": 1,
      "message": "hmm this is interesting. Not sure how this would work, currently I see 3 TLS connections to the same host www.google.com, with this code, it means we will only cache one of them, I\u0027m not sure what is the difference between them, but the question is if we are going to terminate all of them, then this code won\u0027t work",
      "range": {
        "startLine": 1094,
        "startChar": 4,
        "endLine": 1094,
        "endChar": 20
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da765205_82fc3250",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 1094,
      "author": {
        "id": 1224374
      },
      "writtenOn": "2017-07-18T18:04:10Z",
      "side": 1,
      "message": "Ok this might be worth than I initially thought! Given that we have 3 connections with the same host name, this means all of them will be using the same session concurrently, don\u0027t think this will work! We might need to add a flag to the cache if the session is active or something like that, but this would make the code more complicated. Need to think more about that",
      "parentUuid": "4cc54e84_39b3f658",
      "range": {
        "startLine": 1094,
        "startChar": 4,
        "endLine": 1094,
        "endChar": 20
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5aeedfa4_ba626031",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 1094,
      "author": {
        "id": 1224374
      },
      "writtenOn": "2017-07-18T18:04:40Z",
      "side": 1,
      "message": "worse*",
      "parentUuid": "da765205_82fc3250",
      "range": {
        "startLine": 1094,
        "startChar": 4,
        "endLine": 1094,
        "endChar": 20
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7023001_42df9957",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 1094,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T19:10:11Z",
      "side": 1,
      "message": "Will add unit test to cover this scenario (concurrent sessions)",
      "parentUuid": "5aeedfa4_ba626031",
      "range": {
        "startLine": 1094,
        "startChar": 4,
        "endLine": 1094,
        "endChar": 20
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "786f8f2f_51ea386c",
        "filename": "webrtc/rtc_base/openssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 1094,
      "author": {
        "id": 1224374
      },
      "writtenOn": "2017-07-18T19:33:10Z",
      "side": 1,
      "message": "For reference, here is the session cache implementation in Chrome\nhttps://cs.chromium.org/chromium/src/net/ssl/ssl_client_session_cache.h?q\u003dssl_client_session_cache.h\u0026sq\u003dpackage:chromium\u0026dr\u003dCSs\u0026l\u003d5",
      "parentUuid": "c7023001_42df9957",
      "range": {
        "startLine": 1094,
        "startChar": 4,
        "endLine": 1094,
        "endChar": 20
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb6e2853_a0af288e",
        "filename": "webrtc/rtc_base/openssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T16:27:15Z",
      "side": 1,
      "message": "This could use a comment about what it means.",
      "range": {
        "startLine": 53,
        "startChar": 35,
        "endLine": 53,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48b8db34_043a864d",
        "filename": "webrtc/rtc_base/openssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T17:01:28Z",
      "side": 1,
      "message": "This is documented in the base class.",
      "parentUuid": "eb6e2853_a0af288e",
      "range": {
        "startLine": 53,
        "startChar": 35,
        "endLine": 53,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7565b844_0691a714",
        "filename": "webrtc/rtc_base/openssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T23:28:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "48b8db34_043a864d",
      "range": {
        "startLine": 53,
        "startChar": 35,
        "endLine": 53,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3078ee8_53f7f85e",
        "filename": "webrtc/rtc_base/openssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T16:27:15Z",
      "side": 1,
      "message": "This could use a comment, especially around how it is intended to be used.",
      "range": {
        "startLine": 55,
        "startChar": 65,
        "endLine": 55,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cf459d4_e718f6e1",
        "filename": "webrtc/rtc_base/openssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-19T01:27:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f3078ee8_53f7f85e",
      "range": {
        "startLine": 55,
        "startChar": 65,
        "endLine": 55,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d1e5e12_db366757",
        "filename": "webrtc/rtc_base/openssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 90,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T16:27:15Z",
      "side": 1,
      "message": "This could use a comment, especially of when it gets called and what it\u0027s intended to do.",
      "range": {
        "startLine": 90,
        "startChar": 67,
        "endLine": 90,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b309d647_d72941a5",
        "filename": "webrtc/rtc_base/openssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 90,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-19T01:27:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9d1e5e12_db366757",
      "range": {
        "startLine": 90,
        "startChar": 67,
        "endLine": 90,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b8070cf_f4594df0",
        "filename": "webrtc/rtc_base/openssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T16:27:15Z",
      "side": 1,
      "message": "This could use a  comment explaining what it does, how it caches sessions, and how it owns the cached sessions.",
      "range": {
        "startLine": 117,
        "startChar": 56,
        "endLine": 117,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "613bf0ee_551dbe28",
        "filename": "webrtc/rtc_base/openssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 1224374
      },
      "writtenOn": "2017-07-18T18:01:47Z",
      "side": 1,
      "message": "Don\u0027t you have any memory concerns about shipping this with out eviction, should we at least add an upper limit on the cache size ?",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 117,
        "endChar": 56
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1511edc_a335ec4a",
        "filename": "webrtc/rtc_base/openssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T23:28:22Z",
      "side": 1,
      "message": "Not in this version of the CL; right now we only have a single hostname. But I agree that this should be solved in a followup.",
      "parentUuid": "613bf0ee_551dbe28",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 117,
        "endChar": 56
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bf4b583_83766011",
        "filename": "webrtc/rtc_base/openssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-19T01:27:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4b8070cf_f4594df0",
      "range": {
        "startLine": 117,
        "startChar": 56,
        "endLine": 117,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a95c9f6b_91b2b3a9",
        "filename": "webrtc/rtc_base/openssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-19T01:27:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d1511edc_a335ec4a",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 117,
        "endChar": 56
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c44e121_7b75e81b",
        "filename": "webrtc/rtc_base/openssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 124,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T16:27:15Z",
      "side": 1,
      "message": "Will anything ever call this?",
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3838e11d_07b9944e",
        "filename": "webrtc/rtc_base/openssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 124,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T17:01:28Z",
      "side": 1,
      "message": "Yes - BasicPacketSocketFactory (and presumably the unit tests) would call this to enable DTLS resumption.",
      "parentUuid": "9c44e121_7b75e81b",
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45617e14_fb60c5f9",
        "filename": "webrtc/rtc_base/openssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 124,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T17:31:21Z",
      "side": 1,
      "message": "But why would it call SetMode?",
      "parentUuid": "3838e11d_07b9944e",
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cdf23d7a_487b16bd",
        "filename": "webrtc/rtc_base/openssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 124,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T23:28:22Z",
      "side": 1,
      "message": "I don\u0027t understand. Doesn\u0027t it need to set SSL_MODE_DTLS?",
      "parentUuid": "45617e14_fb60c5f9",
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd8bd892_d820464c",
        "filename": "webrtc/rtc_base/openssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 124,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-19T00:40:02Z",
      "side": 1,
      "message": "No. Only the SSLStreamAdapter sets the mode to DTLS.  SSLAdapter::SetMode is never called.",
      "parentUuid": "cdf23d7a_487b16bd",
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fcd3012_5f6d09e4",
        "filename": "webrtc/rtc_base/openssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 124,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-19T01:27:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "cdf23d7a_487b16bd",
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3774f76_c4c0e078",
        "filename": "webrtc/rtc_base/openssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 125,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T16:27:15Z",
      "side": 1,
      "message": "Am I correct that this factory has no effect until it\u0027s used in BasicPacketSocketFactory::CreateClientTcpSocket?",
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc5d0792_08ba714b",
        "filename": "webrtc/rtc_base/openssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 125,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T17:01:28Z",
      "side": 1,
      "message": "Yes. Left for a separate CL to wire it into BPSF.",
      "parentUuid": "f3774f76_c4c0e078",
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bdc6d20_196a4224",
        "filename": "webrtc/rtc_base/openssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 125,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T23:28:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "dc5d0792_08ba714b",
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd629b3e_a7aa27ad",
        "filename": "webrtc/rtc_base/openssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 1224374
      },
      "writtenOn": "2017-07-18T18:01:47Z",
      "side": 1,
      "message": "Please add a TODO for the eviction implementation",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 135,
        "endChar": 48
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "caf27dc4_f3698b62",
        "filename": "webrtc/rtc_base/openssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T23:28:22Z",
      "side": 1,
      "message": "Will do",
      "parentUuid": "fd629b3e_a7aa27ad",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 135,
        "endChar": 48
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5876eb62_2de5e28a",
        "filename": "webrtc/rtc_base/openssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-19T01:27:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "caf27dc4_f3698b62",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 135,
        "endChar": 48
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73a6850c_07078e6c",
        "filename": "webrtc/rtc_base/ssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T20:52:46Z",
      "side": 1,
      "message": "Once you change BasicPacketSocketFactory::CreateClientTcpSocket, I don\u0027t think you\u0027ll need this anymore and we can just have one entrance point (the factory).",
      "range": {
        "startLine": 23,
        "startChar": 53,
        "endLine": 23,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11862362_ea0b06ce",
        "filename": "webrtc/rtc_base/ssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T23:28:22Z",
      "side": 1,
      "message": "There is a lot in these files that could be improved. I had to force myself to not fix all the random loose ends lying around.\n\nWill try to come back to this after landing these CLs.",
      "parentUuid": "73a6850c_07078e6c",
      "range": {
        "startLine": 23,
        "startChar": 53,
        "endLine": 23,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2799423_cebcbd17",
        "filename": "webrtc/rtc_base/ssladapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-19T00:40:02Z",
      "side": 1,
      "message": "You had to force yourself not to juberti yourself :)?",
      "parentUuid": "11862362_ea0b06ce",
      "range": {
        "startLine": 23,
        "startChar": 53,
        "endLine": 23,
        "endChar": 0
      },
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd2dd6bc_7dfef23c",
        "filename": "webrtc/rtc_base/ssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T16:27:15Z",
      "side": 1,
      "message": "Since we only have on SSLAdapter (the OpenSSLAdapter) and since the factory is only going to be used in one place (BasicPacketSocketFactory::CreateClientTcpSocket), why don\u0027t we just have the OpenSSLAdapterFactory and skip having the SSLAdapterFactory?",
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3879b510_83d80935",
        "filename": "webrtc/rtc_base/ssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T17:01:28Z",
      "side": 1,
      "message": "That seems like we\u0027re breaking the entire abstraction that SSLFoo provides. Not sure we want to do that, or that this would be the right time to do so.",
      "parentUuid": "cd2dd6bc_7dfef23c",
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dc93041_517713b6",
        "filename": "webrtc/rtc_base/ssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-07-18T17:31:21Z",
      "side": 1,
      "message": "I think SSLFoo already provides no value and we should just collapse it and reduce the complexity.  I agree that could be done in a separate CL, but it seems like a waste to continue perpetuating something that gives no value.",
      "parentUuid": "3879b510_83d80935",
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60fe6281_ae4630bd",
        "filename": "webrtc/rtc_base/ssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T19:10:11Z",
      "side": 1,
      "message": "That seems hostile to the concept of dependency injection / testability. I don\u0027t think this is the time or place to make such a change.",
      "parentUuid": "8dc93041_517713b6",
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "577fd72b_15d5055b",
        "filename": "webrtc/rtc_base/ssladapter.h",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-07-18T23:28:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "60fe6281_ae4630bd",
      "revId": "fa5896d6bdd2c07c58ed6e0499d845f1821de661",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}