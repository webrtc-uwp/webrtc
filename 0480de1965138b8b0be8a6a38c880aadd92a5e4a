{
  "comments": [
    {
      "key": {
        "uuid": "e9ede7ba_2c202f50",
        "filename": "webrtc/api/peerconnectioninterface.h",
        "patchSetId": 3
      },
      "lineNbr": 184,
      "author": {
        "id": 1132136
      },
      "writtenOn": "2017-06-07T21:55:37Z",
      "side": 1,
      "message": "Needs comments.\n\nAlso, I\u0027d just call this \"hostname\", not \"tls_host_name\". The user of the API doesn\u0027t need to know how the hostname is used; just that it\u0027s the server\u0027s hostname, and that if it\u0027s present, |uri| needs to contain an IP address.\n\nHowever, I prefer the version of this CL that adds the IP as the new/optional field: https://codereview.webrtc.org/2926823003/diff/1/webrtc/api/peerconnectioninterface.h\n\nBecause:\n\n* If anything is optional, it\u0027s the IP. WebRTC will always work (and use the SNI extension) given just the hostname, encoded in |uri|. Even with this CL, it looks like the TLS SNI extension will end up used if you just put the hostname in |uri| and don\u0027t use |tls_host_name|, which is counter-intuitive. At least, that\u0027s how it appears to me.\n* Most existing applications put hostnames in the URI field (in my experience).\n* In this CL, the IP and hostname are both encoded as strings. In the version that adds the IP as an optional field, the IP is of type IPAddress already, so it\u0027s more clear which field needs to be an IP address and which needs to be a hostname.",
      "range": {
        "startLine": 184,
        "startChar": 4,
        "endLine": 184,
        "endChar": 30
      },
      "revId": "0480de1965138b8b0be8a6a38c880aadd92a5e4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77bac117_d1271786",
        "filename": "webrtc/api/peerconnectioninterface.h",
        "patchSetId": 3
      },
      "lineNbr": 184,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-06-07T21:59:42Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "e9ede7ba_2c202f50",
      "range": {
        "startLine": 184,
        "startChar": 4,
        "endLine": 184,
        "endChar": 30
      },
      "revId": "0480de1965138b8b0be8a6a38c880aadd92a5e4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "daaa001b_cc36bc9b",
        "filename": "webrtc/api/peerconnectioninterface.h",
        "patchSetId": 3
      },
      "lineNbr": 184,
      "author": {
        "id": 1213539
      },
      "writtenOn": "2017-06-07T22:59:17Z",
      "side": 1,
      "message": "\u003e\u003e\u003e \"If anything is optional, it\u0027s the IP\"\nIn our case IP is what we start with and the hostname is the optional one which we will use for the SNI extension. \n\n\u003e\u003e\u003e \"Even with this CL, it looks like the TLS SNI extension will end up used if you just put the hostname in |uri| and don\u0027t use |tls_host_name|, which is counter-intuitive. At least, that\u0027s how it appears to me.\"\nNo, it will only be used if the address has a resolved ip address and non ip literal host name. But to your point, this is why I said before it is less confusing to have a separate field for the tls hostname \n\n\u003e\u003e\u003e \"In this CL, the IP and hostname are both encoded as strings. In the version that adds the IP as an optional field, the IP is of type IPAddress already, so it\u0027s more clear which field needs to be an IP address and which needs to be a hostname.\"\nYou just moved the confusion to the upper level, as the IceServer creator need to check the returned host name value and determine weather to set this optional IP field or not",
      "parentUuid": "77bac117_d1271786",
      "range": {
        "startLine": 184,
        "startChar": 4,
        "endLine": 184,
        "endChar": 30
      },
      "revId": "0480de1965138b8b0be8a6a38c880aadd92a5e4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6ca809d_67e4dc60",
        "filename": "webrtc/api/peerconnectioninterface.h",
        "patchSetId": 3
      },
      "lineNbr": 184,
      "author": {
        "id": 1132136
      },
      "writtenOn": "2017-06-08T00:33:11Z",
      "side": 1,
      "message": "\u003e In our case IP is what we start with and the hostname is the optional one which we will use for the SNI extension.\n\nMy point is that if you just have the IP, you still *need* the hostname to connect to the TURN server (if it requires SNI). But if you have the hostname, you don\u0027t need the application to give you the IP; it\u0027s just an optimization that saves an extra DNS cache access.\n\n\u003e No, it will only be used if the address has a resolved ip address and non ip literal host name. \n\nOh, I didn\u0027t catch that. Is there a reason for that behavior? If we have a hostname, why not use it?\n\n\u003e You just moved the confusion to the upper level, as the IceServer creator need to check the returned host name value and determine weather to set this optional IP field or not\n\nThe IceServer creator should know if it has a pre-resolved IP address or not, so I don\u0027t see how it adds confusion. What\u0027s an example?\n\nAnother point: URI means \"uniform resource identifier\". Two different hostnames hosted on the same IP address (which is what SNI is used for, right?) represent different resources, so shouldn\u0027t they be using different identifiers? Meaning, if the hostname matters, shouldn\u0027t it be in the URI by definition?\n\nI don\u0027t want to hold this up forever, so if you feel strongly we can keep it as \"uri/hostname\", but I still don\u0027t understand the downside of \"uri/ip\".",
      "parentUuid": "daaa001b_cc36bc9b",
      "range": {
        "startLine": 184,
        "startChar": 4,
        "endLine": 184,
        "endChar": 30
      },
      "revId": "0480de1965138b8b0be8a6a38c880aadd92a5e4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffbd1a5f_18ca58d7",
        "filename": "webrtc/p2p/base/basicpacketsocketfactory.cc",
        "patchSetId": 3
      },
      "lineNbr": 157,
      "author": {
        "id": 1132136
      },
      "writtenOn": "2017-06-07T21:55:37Z",
      "side": 1,
      "message": "nit: Capitalize \"Both\", and \"IP\".",
      "range": {
        "startLine": 157,
        "startChar": 9,
        "endLine": 157,
        "endChar": 13
      },
      "revId": "0480de1965138b8b0be8a6a38c880aadd92a5e4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32d46481_c767534f",
        "filename": "webrtc/pc/iceserverparsing.cc",
        "patchSetId": 3
      },
      "lineNbr": 242,
      "author": {
        "id": 1132136
      },
      "writtenOn": "2017-06-07T21:55:37Z",
      "side": 1,
      "message": "This comment, and a more detailed explanation, should also go in the header file.",
      "revId": "0480de1965138b8b0be8a6a38c880aadd92a5e4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0c64eb8_3d81b75e",
        "filename": "webrtc/pc/iceserverparsing.cc",
        "patchSetId": 3
      },
      "lineNbr": 242,
      "author": {
        "id": 1213539
      },
      "writtenOn": "2017-06-10T19:26:21Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "32d46481_c767534f",
      "revId": "0480de1965138b8b0be8a6a38c880aadd92a5e4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d322a0e0_0569e3d0",
        "filename": "webrtc/pc/iceserverparsing.cc",
        "patchSetId": 3
      },
      "lineNbr": 243,
      "author": {
        "id": 1132136
      },
      "writtenOn": "2017-06-07T21:55:37Z",
      "side": 1,
      "message": "nit: capitalize \"IP\"",
      "range": {
        "startLine": 243,
        "startChar": 22,
        "endLine": 243,
        "endChar": 24
      },
      "revId": "0480de1965138b8b0be8a6a38c880aadd92a5e4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c91df925_bf3f5f93",
        "filename": "webrtc/pc/iceserverparsing.cc",
        "patchSetId": 3
      },
      "lineNbr": 243,
      "author": {
        "id": 1213539
      },
      "writtenOn": "2017-06-10T19:26:21Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d322a0e0_0569e3d0",
      "range": {
        "startLine": 243,
        "startChar": 22,
        "endLine": 243,
        "endChar": 24
      },
      "revId": "0480de1965138b8b0be8a6a38c880aadd92a5e4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4bce9dab_51eca100",
        "filename": "webrtc/pc/iceserverparsing.cc",
        "patchSetId": 3
      },
      "lineNbr": 244,
      "author": {
        "id": 1132136
      },
      "writtenOn": "2017-06-07T21:55:37Z",
      "side": 1,
      "message": "nit: Would be nice to have a more specific error message.",
      "range": {
        "startLine": 244,
        "startChar": 28,
        "endLine": 244,
        "endChar": 60
      },
      "revId": "0480de1965138b8b0be8a6a38c880aadd92a5e4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84691b77_5052074b",
        "filename": "webrtc/pc/iceserverparsing.cc",
        "patchSetId": 3
      },
      "lineNbr": 244,
      "author": {
        "id": 1213539
      },
      "writtenOn": "2017-06-10T19:26:21Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4bce9dab_51eca100",
      "range": {
        "startLine": 244,
        "startChar": 28,
        "endLine": 244,
        "endChar": 60
      },
      "revId": "0480de1965138b8b0be8a6a38c880aadd92a5e4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8b8f473_9d1363be",
        "filename": "webrtc/sdk/android/api/org/webrtc/PeerConnection.java",
        "patchSetId": 3
      },
      "lineNbr": 103,
      "author": {
        "id": 1132136
      },
      "writtenOn": "2017-06-07T21:55:37Z",
      "side": 1,
      "message": "Should have a comment here too.",
      "range": {
        "startLine": 103,
        "startChar": 24,
        "endLine": 103,
        "endChar": 35
      },
      "revId": "0480de1965138b8b0be8a6a38c880aadd92a5e4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}