{
  "comments": [
    {
      "key": {
        "uuid": "c6cd9dd3_38daea4a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-07-24T17:30:38Z",
      "side": 1,
      "message": "translated [also below]",
      "range": {
        "startLine": 7,
        "startChar": 7,
        "endLine": 7,
        "endChar": 16
      },
      "revId": "5b3741ba563cd8882de1ebd2fbc3b837dc4f6947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37adeb53_87a22234",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-07-24T19:16:12Z",
      "side": 1,
      "message": ":(\nI do know this word.",
      "parentUuid": "c6cd9dd3_38daea4a",
      "range": {
        "startLine": 7,
        "startChar": 7,
        "endLine": 7,
        "endChar": 16
      },
      "revId": "5b3741ba563cd8882de1ebd2fbc3b837dc4f6947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ad7b6b2_5112ae71",
        "filename": "webrtc/modules/desktop_capture/mouse_cursor_monitor_mac.mm",
        "patchSetId": 7
      },
      "lineNbr": 251,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-07-24T17:30:38Z",
      "side": 1,
      "message": "This looks like a significant behaviour change, but I can\u0027t work out from the CL description why it\u0027s needed.",
      "range": {
        "startLine": 251,
        "startChar": 58,
        "endLine": 251,
        "endChar": 0
      },
      "revId": "5b3741ba563cd8882de1ebd2fbc3b837dc4f6947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4634bc94_c58aad48",
        "filename": "webrtc/modules/desktop_capture/mouse_cursor_monitor_mac.mm",
        "patchSetId": 7
      },
      "lineNbr": 251,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-07-24T19:16:12Z",
      "side": 1,
      "message": "Not really, the newly added overload OnMouseCursorPosition() without CursorState is not used any where.",
      "parentUuid": "2ad7b6b2_5112ae71",
      "range": {
        "startLine": 251,
        "startChar": 58,
        "endLine": 251,
        "endChar": 0
      },
      "revId": "5b3741ba563cd8882de1ebd2fbc3b837dc4f6947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a936979a_09f0e4d4",
        "filename": "webrtc/modules/desktop_capture/mouse_cursor_monitor_mac.mm",
        "patchSetId": 7
      },
      "lineNbr": 251,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-07-24T19:49:45Z",
      "side": 1,
      "message": "Why not delete it then? It seems strange to be calling the same method with different parameters, and I don\u0027t see how it helps with transition (if the first second method doesn\u0027t exit, then this won\u0027t compile; if it does then the first call isn\u0027t needed).\n\nIf I\u0027m missing something, then I think a TODO would be appropriate here to make it clear that this code is in a transitional state.",
      "parentUuid": "4634bc94_c58aad48",
      "range": {
        "startLine": 251,
        "startChar": 58,
        "endLine": 251,
        "endChar": 0
      },
      "revId": "5b3741ba563cd8882de1ebd2fbc3b837dc4f6947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "275fe4c0_8fe9b0b8",
        "filename": "webrtc/modules/desktop_capture/mouse_cursor_monitor_mac.mm",
        "patchSetId": 7
      },
      "lineNbr": 251,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-07-24T20:40:19Z",
      "side": 1,
      "message": "The long term goal is to remove the first overload, but now it\u0027s still used in, say, DesktopAndCursorComposer. Before let DesktopAndCursorComposer use the new API, we need to correctly set DesktopFrame::top_left() in various derived classes of DesktopFrame, and DesktopCapturer implementations.\nTODOs have been added to MouseCursorMonitor, though we cannot see it in code search.\nI am happy to add TODOs here and in other MouseCursorMonitor implementations.",
      "parentUuid": "a936979a_09f0e4d4",
      "range": {
        "startLine": 251,
        "startChar": 58,
        "endLine": 251,
        "endChar": 0
      },
      "revId": "5b3741ba563cd8882de1ebd2fbc3b837dc4f6947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d1d5700_001d07e8",
        "filename": "webrtc/modules/desktop_capture/mouse_cursor_monitor_mac.mm",
        "patchSetId": 7
      },
      "lineNbr": 251,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-07-24T21:23:12Z",
      "side": 1,
      "message": "Understood. I had missed that the new overload was not pure-virtual and so will be a no-op for implementations that have not yet been switched over.\n\nAs long as the plan is to delete the old overload (and its call-sites) and to make the new one pure-virtual in the next few weeks or so, this is fine.",
      "parentUuid": "275fe4c0_8fe9b0b8",
      "range": {
        "startLine": 251,
        "startChar": 58,
        "endLine": 251,
        "endChar": 0
      },
      "revId": "5b3741ba563cd8882de1ebd2fbc3b837dc4f6947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89c906a5_e4820510",
        "filename": "webrtc/modules/desktop_capture/resolution_change_detector.cc",
        "patchSetId": 7
      },
      "lineNbr": 24,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-07-24T17:30:38Z",
      "side": 1,
      "message": "This change is not mentioned in the CL description and doesn\u0027t appear to be related. Can you split it into a separate CL?",
      "range": {
        "startLine": 24,
        "startChar": 3,
        "endLine": 24,
        "endChar": 0
      },
      "revId": "5b3741ba563cd8882de1ebd2fbc3b837dc4f6947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c019651b_34155935",
        "filename": "webrtc/modules/desktop_capture/resolution_change_detector.cc",
        "patchSetId": 7
      },
      "lineNbr": 24,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-07-24T19:16:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "89c906a5_e4820510",
      "range": {
        "startLine": 24,
        "startChar": 3,
        "endLine": 24,
        "endChar": 0
      },
      "revId": "5b3741ba563cd8882de1ebd2fbc3b837dc4f6947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d3c0d0d_ba61a425",
        "filename": "webrtc/modules/desktop_capture/resolution_change_detector.h",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-07-24T17:30:38Z",
      "side": 1,
      "message": "This comment pretty much just reorders the words in the class name. I don\u0027t think it adds anything to readability. I recommend just deleting it.",
      "range": {
        "startLine": 18,
        "startChar": 36,
        "endLine": 18,
        "endChar": 0
      },
      "revId": "5b3741ba563cd8882de1ebd2fbc3b837dc4f6947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "649d113f_240d6973",
        "filename": "webrtc/modules/desktop_capture/resolution_change_detector.h",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-07-24T19:16:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d3c0d0d_ba61a425",
      "range": {
        "startLine": 18,
        "startChar": 36,
        "endLine": 18,
        "endChar": 0
      },
      "revId": "5b3741ba563cd8882de1ebd2fbc3b837dc4f6947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4e32384_29445934",
        "filename": "webrtc/modules/desktop_capture/win/display_change_detector.h",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-07-24T17:30:38Z",
      "side": 1,
      "message": "Why do you need this class? It looks virtually identical to ResolutionChangeDetector. Could you refactor your code to use that instead?",
      "range": {
        "startLine": 20,
        "startChar": 29,
        "endLine": 20,
        "endChar": 0
      },
      "revId": "5b3741ba563cd8882de1ebd2fbc3b837dc4f6947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b590202a_6713fdc3",
        "filename": "webrtc/modules/desktop_capture/win/display_change_detector.h",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-07-24T19:16:12Z",
      "side": 1,
      "message": "I think they have different functionalities, though they have similar public APIs.\n\nResolutionChangeDetector checks the input DesktopSize, but DisplayChangeDetector checks the system DesktopRect. Meanwhile, DisplayChangeDetector is expected to also check the pixel format changes later.",
      "parentUuid": "e4e32384_29445934",
      "range": {
        "startLine": 20,
        "startChar": 29,
        "endLine": 20,
        "endChar": 0
      },
      "revId": "5b3741ba563cd8882de1ebd2fbc3b837dc4f6947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db3c5c97_4a2e18eb",
        "filename": "webrtc/modules/desktop_capture/win/display_change_detector.h",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-07-24T19:49:45Z",
      "side": 1,
      "message": "Could they be combined into a single class? The functionality seems so similar that someone unfamiliar with the area would have difficulty knowing which class to use. Appropriately-named methods on a single change-detector class might make it much clearer.\n\nProbably not in this CL though.",
      "parentUuid": "b590202a_6713fdc3",
      "range": {
        "startLine": 20,
        "startChar": 29,
        "endLine": 20,
        "endChar": 0
      },
      "revId": "5b3741ba563cd8882de1ebd2fbc3b837dc4f6947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d188daa_b112f204",
        "filename": "webrtc/modules/desktop_capture/win/display_change_detector.h",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-07-25T00:11:15Z",
      "side": 1,
      "message": "I think renaming this class would be easier. :)",
      "parentUuid": "db3c5c97_4a2e18eb",
      "range": {
        "startLine": 20,
        "startChar": 29,
        "endLine": 20,
        "endChar": 0
      },
      "revId": "5b3741ba563cd8882de1ebd2fbc3b837dc4f6947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba36d4aa_450822e8",
        "filename": "webrtc/modules/desktop_capture/win/screen_capture_utils.h",
        "patchSetId": 7
      },
      "lineNbr": 40,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-07-24T17:30:38Z",
      "side": 1,
      "message": "What do you mean by \"if no display configuration changes happened\"? Does that mean that GetFullscreenRect().top_left() may return the wrong thing? If so, then don\u0027t even mention the performance, since it\u0027s not relevant. TBH, unless you have reason to believe that this is called from performance-critical code, the performance is probably not relevant anyway, and so if the two versions will always return the same value, I think you should get rid of this version rather than provide two ways of accessing the same thing.",
      "range": {
        "startLine": 40,
        "startChar": 15,
        "endLine": 40,
        "endChar": 0
      },
      "revId": "5b3741ba563cd8882de1ebd2fbc3b837dc4f6947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8d59c59_f055abc8",
        "filename": "webrtc/modules/desktop_capture/win/screen_capture_utils.h",
        "patchSetId": 7
      },
      "lineNbr": 40,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-07-24T19:16:12Z",
      "side": 1,
      "message": "Both GetFullscreenRect() and GetFullscreenTopLeft() may return different values if display configuration changes happened.\nBut, yes, I am a little bit over-considered this issue. This version has been removed.",
      "parentUuid": "ba36d4aa_450822e8",
      "range": {
        "startLine": 40,
        "startChar": 15,
        "endLine": 40,
        "endChar": 0
      },
      "revId": "5b3741ba563cd8882de1ebd2fbc3b837dc4f6947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ff1a206_455cdbaf",
        "filename": "webrtc/modules/desktop_capture/win/screen_capturer_win_gdi.h",
        "patchSetId": 7
      },
      "lineNbr": 73,
      "author": {
        "id": 1000528
      },
      "writtenOn": "2017-07-24T17:30:38Z",
      "side": 1,
      "message": "I don\u0027t think this comment adds anything.",
      "range": {
        "startLine": 73,
        "startChar": 63,
        "endLine": 73,
        "endChar": 0
      },
      "revId": "5b3741ba563cd8882de1ebd2fbc3b837dc4f6947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f36710e_4ee7f623",
        "filename": "webrtc/modules/desktop_capture/win/screen_capturer_win_gdi.h",
        "patchSetId": 7
      },
      "lineNbr": 73,
      "author": {
        "id": 1196069
      },
      "writtenOn": "2017-07-24T19:16:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ff1a206_455cdbaf",
      "range": {
        "startLine": 73,
        "startChar": 63,
        "endLine": 73,
        "endChar": 0
      },
      "revId": "5b3741ba563cd8882de1ebd2fbc3b837dc4f6947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}