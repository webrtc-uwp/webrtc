{
  "comments": [
    {
      "key": {
        "uuid": "b9a53bf9_a2f0a81f",
        "filename": "webrtc/call/rtp_demuxer.cc",
        "patchSetId": 12
      },
      "lineNbr": 46,
      "author": {
        "id": 1132136
      },
      "writtenOn": "2017-08-02T20:49:02Z",
      "side": 1,
      "message": "Good way of rephrasing the deleted comment!",
      "range": {
        "startLine": 44,
        "startChar": 1,
        "endLine": 46,
        "endChar": 60
      },
      "revId": "5fbfb4648aac9f1ff99bce379403d25d8d40d715",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "801ec838_0dbdfb06",
        "filename": "webrtc/call/rtp_demuxer.h",
        "patchSetId": 12
      },
      "lineNbr": 60,
      "author": {
        "id": 1132136
      },
      "writtenOn": "2017-08-02T20:49:02Z",
      "side": 1,
      "message": "nit: The grammar in rule #1 sounds a little weird to me, specifically \"the MID has no sink that has been added with the MID.\" I\u0027d rephrase it as:\n\n\"If the packet contains the MID header extension, and no sink has been added with that MID as a criteria, the packet is not routed.\"",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 60,
        "endChar": 74
      },
      "revId": "5fbfb4648aac9f1ff99bce379403d25d8d40d715",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6916fe37_2bb5426c",
        "filename": "webrtc/call/rtp_demuxer.h",
        "patchSetId": 12
      },
      "lineNbr": 77,
      "author": {
        "id": 1132136
      },
      "writtenOn": "2017-08-02T20:49:02Z",
      "side": 1,
      "message": "This is great, thanks!",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 77,
        "endChar": 40
      },
      "revId": "5fbfb4648aac9f1ff99bce379403d25d8d40d715",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03ce8d50_434e478f",
        "filename": "webrtc/call/rtp_demuxer.h",
        "patchSetId": 12
      },
      "lineNbr": 138,
      "author": {
        "id": 1132136
      },
      "writtenOn": "2017-08-02T20:49:02Z",
      "side": 1,
      "message": "Comments that reference \"p_mid\"/etc. should be updated.",
      "range": {
        "startLine": 138,
        "startChar": 8,
        "endLine": 138,
        "endChar": 13
      },
      "revId": "5fbfb4648aac9f1ff99bce379403d25d8d40d715",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4549cf2b_5b0e6785",
        "filename": "webrtc/call/rtp_demuxer_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 193,
      "author": {
        "id": 1132136
      },
      "writtenOn": "2017-08-02T20:49:02Z",
      "side": 1,
      "message": "nit: If we do this it should be in another CL, but I think it would be nice if we could do something like this:\n\nauto packet \u003d PacketBuilder().WithSsrc(0x1).WithMid(\"foo\").WithRsid(\"bar\").Build();\n\nThen we wouldn\u0027t need a different method for each combination of fields, but the test maintains its readability. It would also be cheap to add \"WithSequenceNumber\"/\"WithPayloadType\", such that the tests wouldn\u0027t have to call SetSequenceNumber/SetPayloadType directly.",
      "range": {
        "startLine": 144,
        "startChar": 0,
        "endLine": 193,
        "endChar": 3
      },
      "revId": "5fbfb4648aac9f1ff99bce379403d25d8d40d715",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5d7def4_aa074a67",
        "filename": "webrtc/call/rtp_demuxer_unittest.cc",
        "patchSetId": 12
      },
      "lineNbr": 1249,
      "author": {
        "id": 1132136
      },
      "writtenOn": "2017-08-02T20:49:02Z",
      "side": 1,
      "message": "I don\u0027t understand what this is testing; can you add a comment explaining?",
      "range": {
        "startLine": 1234,
        "startChar": 0,
        "endLine": 1249,
        "endChar": 1
      },
      "revId": "5fbfb4648aac9f1ff99bce379403d25d8d40d715",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}