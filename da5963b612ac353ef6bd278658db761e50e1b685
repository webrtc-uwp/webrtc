{
  "comments": [
    {
      "key": {
        "uuid": "a7979e75_4ea8b58e",
        "filename": "modules/rtp_rtcp/source/rtp_receiver_impl.cc",
        "patchSetId": 7
      },
      "lineNbr": 200,
      "author": {
        "id": 5019
      },
      "writtenOn": "2017-10-04T07:59:33Z",
      "side": 1,
      "message": "how does recovered() influence \u0027in_order\u0027?",
      "range": {
        "startLine": 200,
        "startChar": 30,
        "endLine": 200,
        "endChar": 0
      },
      "revId": "da5963b612ac353ef6bd278658db761e50e1b685",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28167b7c_749ff15d",
        "filename": "modules/rtp_rtcp/source/rtp_receiver_impl.cc",
        "patchSetId": 7
      },
      "lineNbr": 200,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-10-04T08:55:22Z",
      "side": 1,
      "message": "If you look at Stefan\u0027s comment, the thing is that for recovered packets, we used to call this function with in_order \u003d\u003d false, and hence never update these last_received_* variables.\n\nThat\u0027s a change in behavior in case our InOrderPacket ever happens to return true for a recovered packet. Not clear to me how likely that is, but checking the recoverd flag should be more reliable.",
      "parentUuid": "a7979e75_4ea8b58e",
      "range": {
        "startLine": 200,
        "startChar": 30,
        "endLine": 200,
        "endChar": 0
      },
      "revId": "da5963b612ac353ef6bd278658db761e50e1b685",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a51b261_6fa048da",
        "filename": "modules/rtp_rtcp/source/rtp_receiver_impl.cc",
        "patchSetId": 7
      },
      "lineNbr": 200,
      "author": {
        "id": 5019
      },
      "writtenOn": "2017-10-04T09:02:09Z",
      "side": 1,
      "message": "One way to deal with it - pass recovered flag as a boolean (but not as last parameter to break IncomingRtpPacket signature)\n\nAnother way - accept that though it is unlikely recovered packet happen to be in order, it still can be and then it is valid to update sequence_number/timestamps.\n\nEither way I suggest to resolve TODO comment in this CL instead of keeping it as is.",
      "parentUuid": "28167b7c_749ff15d",
      "range": {
        "startLine": 200,
        "startChar": 30,
        "endLine": 200,
        "endChar": 0
      },
      "revId": "da5963b612ac353ef6bd278658db761e50e1b685",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5dd64e2_7405a422",
        "filename": "modules/rtp_rtcp/source/rtp_receiver_impl.cc",
        "patchSetId": 7
      },
      "lineNbr": 200,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-10-04T09:28:50Z",
      "side": 1,
      "message": "My point with the TODO is a reminder that when we change this method to accept an RtpPacketReceived, it makes sense to update this check to also take the recovered flag into account.\n\nDo you think that can be clarified, or do you still want me to delete the TODO?\n\nI think the purpose of the timestamp recording here is to derive a relation between rtp time and system time, for a/v sync. And we\u0027d want to do that only for the original transmission of an RTP packet; system arrival time of recovered or retransmitted packets add undesired noise.",
      "parentUuid": "2a51b261_6fa048da",
      "range": {
        "startLine": 200,
        "startChar": 30,
        "endLine": 200,
        "endChar": 0
      },
      "revId": "da5963b612ac353ef6bd278658db761e50e1b685",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ade73939_2ce8f6e7",
        "filename": "modules/rtp_rtcp/source/rtp_receiver_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 340,
      "author": {
        "id": 5019
      },
      "writtenOn": "2017-10-04T07:59:33Z",
      "side": 1,
      "message": "These two tests look like should have be landed in previous CL.\nMind landing them independently to changes to \u0027in_order\u0027?",
      "range": {
        "startLine": 340,
        "startChar": 44,
        "endLine": 340,
        "endChar": 0
      },
      "revId": "da5963b612ac353ef6bd278658db761e50e1b685",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c51701e8_67e5f1c2",
        "filename": "modules/rtp_rtcp/source/rtp_receiver_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 340,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-10-04T08:55:22Z",
      "side": 1,
      "message": "You\u0027re right, will do.",
      "parentUuid": "ade73939_2ce8f6e7",
      "range": {
        "startLine": 340,
        "startChar": 44,
        "endLine": 340,
        "endChar": 0
      },
      "revId": "da5963b612ac353ef6bd278658db761e50e1b685",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ab1c6e2_8f46d8d7",
        "filename": "modules/rtp_rtcp/source/rtp_receiver_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 340,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-10-04T09:08:07Z",
      "side": 1,
      "message": "But on second thought, tests make little sense before this change. The tests would have to be updated with a true or false in_order argument on each call to IncomingRtpPacket, to tell the code whether or not the timestamp should be recorded.\n\nSo the point of the tests is to exercise the new logic involving the local InOrderPacket function.",
      "parentUuid": "c51701e8_67e5f1c2",
      "range": {
        "startLine": 340,
        "startChar": 44,
        "endLine": 340,
        "endChar": 0
      },
      "revId": "da5963b612ac353ef6bd278658db761e50e1b685",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fda242f_b07958dd",
        "filename": "modules/rtp_rtcp/source/rtp_receiver_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 340,
      "author": {
        "id": 5019
      },
      "writtenOn": "2017-10-04T09:15:28Z",
      "side": 1,
      "message": "Would be nice to reflect that in test names",
      "parentUuid": "9ab1c6e2_8f46d8d7",
      "range": {
        "startLine": 340,
        "startChar": 44,
        "endLine": 340,
        "endChar": 0
      },
      "revId": "da5963b612ac353ef6bd278658db761e50e1b685",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87fa8cb5_31785284",
        "filename": "modules/rtp_rtcp/source/rtp_receiver_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 340,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-10-04T09:28:50Z",
      "side": 1,
      "message": "Any name suggestions? \"RecordsInOrderTimestamps\", \"RecordsTimestampAtSeqnoJump\"?",
      "parentUuid": "5fda242f_b07958dd",
      "range": {
        "startLine": 340,
        "startChar": 44,
        "endLine": 340,
        "endChar": 0
      },
      "revId": "da5963b612ac353ef6bd278658db761e50e1b685",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}