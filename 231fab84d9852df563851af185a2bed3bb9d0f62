{
  "comments": [
    {
      "key": {
        "uuid": "a33872fe_cd5fac17",
        "filename": "webrtc/base/openssladapter.cc",
        "patchSetId": 4
      },
      "lineNbr": 986,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-06-21T21:14:52Z",
      "side": 1,
      "message": "Add comment to explain this code",
      "revId": "231fab84d9852df563851af185a2bed3bb9d0f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e02718d_dfa7c9f6",
        "filename": "webrtc/base/openssladapter.cc",
        "patchSetId": 4
      },
      "lineNbr": 986,
      "author": {
        "id": 1213539
      },
      "writtenOn": "2017-06-21T22:06:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a33872fe_cd5fac17",
      "revId": "231fab84d9852df563851af185a2bed3bb9d0f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4551894d_88f841f7",
        "filename": "webrtc/base/openssladapter.cc",
        "patchSetId": 4
      },
      "lineNbr": 1015,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-06-21T21:14:52Z",
      "side": 1,
      "message": "Is this the right cipher list?\n\nI believe Chromium uses \"DEFAULT:!NULL:!aNULL:!SHA256:!SHA384:!aECDH:!AESGCM+AES256:!aPSK\"\n\nPlease check with davidben to be sure though.",
      "revId": "231fab84d9852df563851af185a2bed3bb9d0f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91292f4d_8ec3410a",
        "filename": "webrtc/base/openssladapter.cc",
        "patchSetId": 4
      },
      "lineNbr": 1015,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2017-06-21T21:36:47Z",
      "side": 1,
      "message": "There\u0027s always code search, if your goal is to match Chromium...\nhttps://cs.chromium.org/chromium/src/net/socket/ssl_client_socket_impl.cc?rcl\u003d0f29527597298df4a879ee6e8bd082993248c740\u0026l\u003d946\n\nHowever, if you do that and you support OpenSSL, you will also need to pull in all the !foo lines in the existing one to avoid regressing OpenSSL. We omit a lot of them because BoringSSL doesn\u0027t support a lot of ancient ciphers.",
      "parentUuid": "4551894d_88f841f7",
      "revId": "231fab84d9852df563851af185a2bed3bb9d0f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "380db9cf_58d927a3",
        "filename": "webrtc/base/openssladapter.cc",
        "patchSetId": 4
      },
      "lineNbr": 1015,
      "author": {
        "id": 1126895
      },
      "writtenOn": "2017-06-21T22:00:42Z",
      "side": 1,
      "message": "I\u0027m fine with using a vanilla config for OpenSSL users - they should be using BoringSSL anyway.\nLet\u0027s match Chromium when using BoringSSL.\n\nNote that there may be other bits that we want to match Chromium on, e.g. extensions:\n            \n            Extension: renegotiation_info\n                Type: renegotiation_info (0xff01)\n                Length: 1\n                Renegotiation Info extension\n                    Renegotiation info extension length: 0",
      "parentUuid": "91292f4d_8ec3410a",
      "revId": "231fab84d9852df563851af185a2bed3bb9d0f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48f7a046_fed38628",
        "filename": "webrtc/base/openssladapter.cc",
        "patchSetId": 4
      },
      "lineNbr": 1015,
      "author": {
        "id": 1213539
      },
      "writtenOn": "2017-06-21T22:06:37Z",
      "side": 1,
      "message": "I will merge the two ciphers but just out of curosity, why HMAC256 and HMAC384 are excluded?",
      "parentUuid": "91292f4d_8ec3410a",
      "revId": "231fab84d9852df563851af185a2bed3bb9d0f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "583406dc_0edd427c",
        "filename": "webrtc/base/openssladapter.cc",
        "patchSetId": 4
      },
      "lineNbr": 1015,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2017-06-21T22:09:04Z",
      "side": 1,
      "message": "renegotiation_info is always sent and not configurable. But, yes, you will need to do more work than just the cipher suite to match Chromium. See that file. Off-hand, you\u0027ll also need to enable GREASE.\n\nAs far as cipher suites go, my suggestion was just to take the existing Chromium line and append the !ADH:!LOW:!EXP:!MD5 that you currently have. Each of those directives is a no-op in BoringSSL.\n\nRe HMAC-SHA256 and HMAC-SHA384, see the comment in that file. Those select legacy CBC ciphers which are known broken and insecure. The HMAC-SHA1 ciphers aren\u0027t any better, but we\u0027re stuck with those for the time being and aren\u0027t going to ship the others if we don\u0027t need to.",
      "parentUuid": "48f7a046_fed38628",
      "revId": "231fab84d9852df563851af185a2bed3bb9d0f62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}