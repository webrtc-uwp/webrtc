{
  "comments": [
    {
      "key": {
        "uuid": "247fdc99_1d2f5ae4",
        "filename": "webrtc/sdk/android/api/org/webrtc/VideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 66,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "Can you comment as to why these changes were needed?",
      "range": {
        "startLine": 66,
        "startChar": 51,
        "endLine": 66,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98b27a6a_d8043d1d",
        "filename": "webrtc/sdk/android/api/org/webrtc/VideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 66,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "MediaCodec accepts integers (not longs) for bitrate and framerate.  They\u0027re also 32-bit ints in the C++ equivalents of Settings and BitrateAllocation (though they\u0027re unsigned in C++):\n\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/common_types.h?l\u003d564\u0026rcl\u003d2149a54ecafd877efdc40e805e4492519b582562\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/common_types.h?l\u003d611\u0026rcl\u003d2149a54ecafd877efdc40e805e4492519b582562\n\nThe current MediaCodecVideoEncoder also takes them as int values:\n\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/sdk/android/api/org/webrtc/MediaCodecVideoEncoder.java?l\u003d383\u0026rcl\u003d2149a54ecafd877efdc40e805e4492519b582562\n\nMaking them \u0027long\u0027 lets them fit the full range of uint32, but that range won\u0027t fit in MediaCodec\u0027s parameters anyway.  The other option is to take a long, clamp values to Min(value, INT32_MAX) and pass that in.\n\nNote that the current C++ layer does implicit conversion between uint32_t and int to pass these values into MediaCodecVideoEncoder.  For example:\n\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/sdk/android/src/jni/androidmediaencoder_jni.cc?l\u003d943\u0026rcl\u003d2149a54ecafd877efdc40e805e4492519b582562",
      "parentUuid": "247fdc99_1d2f5ae4",
      "range": {
        "startLine": 66,
        "startChar": 51,
        "endLine": 66,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1536a5c2_87deba8c",
        "filename": "webrtc/sdk/android/api/org/webrtc/VideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 66,
      "author": {
        "id": 1152084
      },
      "writtenOn": "2017-06-09T09:00:39Z",
      "side": 1,
      "message": "The reason I made them long was to fit any value in unsigned 32-bit integer. However, 32-bit signed integer is enough for up to 2 Gbit/s which I think is probably enough.",
      "parentUuid": "98b27a6a_d8043d1d",
      "range": {
        "startLine": 66,
        "startChar": 51,
        "endLine": 66,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b3bacf3_b2cdeb62",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/DynamicBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "This could use a comment.",
      "range": {
        "startLine": 18,
        "startChar": 59,
        "endLine": 18,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61dcd330_91d308f7",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/DynamicBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1b3bacf3_b2cdeb62",
      "range": {
        "startLine": 18,
        "startChar": 59,
        "endLine": 18,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6758bf37_094fd59c",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/DynamicBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "The rest of the code calls these \"adjustments\".  I think we should call these \"ADJUSTMENT\"s or call the other things \"corrections\" to stay consistent.  I\u0027d prefer the word \"adjustment\".",
      "range": {
        "startLine": 22,
        "startChar": 57,
        "endLine": 22,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f015b6f_dae5ef38",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/DynamicBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6758bf37_094fd59c",
      "range": {
        "startLine": 22,
        "startChar": 57,
        "endLine": 22,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a1f0033_611254e3",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/DynamicBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "This is never used.",
      "range": {
        "startLine": 23,
        "startChar": 40,
        "endLine": 23,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40bda7c0_daaa6639",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/DynamicBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3a1f0033_611254e3",
      "range": {
        "startLine": 23,
        "startChar": 40,
        "endLine": 23,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e92d813_83513d0f",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/DynamicBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "Shouldn\u0027t this be called targetFps?  Better yet, use BaseRateAdjuster as I suggest later.",
      "range": {
        "startLine": 26,
        "startChar": 22,
        "endLine": 26,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db273c56_e3a87ba1",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/DynamicBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7e92d813_83513d0f",
      "range": {
        "startLine": 26,
        "startChar": 22,
        "endLine": 26,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f3226ce_abefe68c",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/DynamicBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "actial \u003d\u003e actual",
      "range": {
        "startLine": 43,
        "startChar": 73,
        "endLine": 43,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4fea3b5e_503478bf",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/DynamicBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f3226ce_abefe68c",
      "range": {
        "startLine": 43,
        "startChar": 73,
        "endLine": 43,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0980e157_9da1130c",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/DynamicBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 46,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "With my other suggested comments, this would be:\n\nthis.targetBits +\u003d floor(targetBps / 1000.0 * actualTimeSpanMs);\nthis.actualBits +\u003d actualBits;\nthis.timeSinceLastAdjustmentMs +\u003d actualTimeSpanMs;\nint deviationBits \u003d (actualBits - targetBits);\nint deviationBytes \u003d floor(deviationBits / 8);",
      "range": {
        "startLine": 46,
        "startChar": 46,
        "endLine": 46,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60e879bf_fddf5781",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/DynamicBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 46,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "I don\u0027t think this actually keeps less state.  It\u0027s taking deviationBytes and replacing it with targetBits and actualBits.  All the rest stays the same.  Maybe I don\u0027t understand your suggestion.",
      "parentUuid": "0980e157_9da1130c",
      "range": {
        "startLine": 46,
        "startChar": 46,
        "endLine": 46,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "342c18b8_b3901d79",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/DynamicBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "Since this min/max thing exists in two places, it seems like a nice place for a helper method.  Then this can be:\n\ndeviationBytes \u003d capAbsValue(deviationBytes, BITRATE_CORRECTION_SEC * deviationThresholdBytes)",
      "range": {
        "startLine": 52,
        "startChar": 61,
        "endLine": 52,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fda92c58_8fd8376c",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/DynamicBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Ah, but one is clamping an int and the other a double.  In order to write a helper that can handle both, I\u0027d need to use a Java generic, which would result in boxing and unboxing the int and double (creating a new Integer or new Double to invoke the helper method, unboxing them into int and double to call Math, and creating a new Integer or Double for the return value, and then unboxing the return value into the int/double variable).  I\u0027m not even sure it\u0027s possible to write the helper at all, since I don\u0027t think I can specify a constraint on the Java generic that bounds it to Float, Integer, Double, or Long (types that can be unboxed into a call to Math.max or Math.min).  Java generics just aren\u0027t as powerful as C++ templates.",
      "parentUuid": "342c18b8_b3901d79",
      "range": {
        "startLine": 52,
        "startChar": 61,
        "endLine": 52,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e67a8c76_f95b3443",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/DynamicBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 56,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "This could use an early return:\n\nif (timeSinceLastAdjustmentMs \u003c\u003d 1000 * BITRATE_CORRECTION_SEC) {\n  return false;\n}\n...",
      "range": {
        "startLine": 56,
        "startChar": 68,
        "endLine": 56,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f057c849_39b1fa07",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/DynamicBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 56,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e67a8c76_f95b3443",
      "range": {
        "startLine": 56,
        "startChar": 68,
        "endLine": 56,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0378d12_97036d02",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/DynamicBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 60,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "It seems like this 0.5 value should be a named constant up above with a clear comment.",
      "range": {
        "startLine": 60,
        "startChar": 90,
        "endLine": 60,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33ab937e_4ab2506f",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/DynamicBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 60,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "It\u0027s rounding up to the nearest int.  I\u0027d rather call Math.round() if you think it needs to be more obvious.",
      "parentUuid": "c0378d12_97036d02",
      "range": {
        "startLine": 60,
        "startChar": 90,
        "endLine": 60,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08c65e61_becb9d49",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/DynamicBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 76,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "This could be replaced with bitrateAdjustmentScaleExp \u003d capAbsValue(bitrateAdjustmentScaleExp, BITRATE_CORRECTION_STEPS).  And then that line could be moved up into each block above and this block could be removed, and thus simplified.",
      "range": {
        "startLine": 76,
        "startChar": 7,
        "endLine": 76,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0016d56f_5d5338be",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/DynamicBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 76,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "How about I just put the Math.max call in the block where we subtract, and the Math.min call in the block where we add?  That guarantees the same result with less flow control and less overhead.",
      "parentUuid": "08c65e61_becb9d49",
      "range": {
        "startLine": 76,
        "startChar": 7,
        "endLine": 76,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59de377c_6a43c29a",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/DynamicBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 85,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "We do we store this when we can simply recompute it on demand from targetBitrateBps?  Less state is easier to maintain.",
      "range": {
        "startLine": 85,
        "startChar": 53,
        "endLine": 85,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30810510_46e2d785",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/DynamicBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 85,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "59de377c_6a43c29a",
      "range": {
        "startLine": 85,
        "startChar": 53,
        "endLine": 85,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a9523c3_e0791f9f",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/DynamicBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 89,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "If we calculate deviationBytes on demand (like I have in my above code suggestion), then we don\u0027t need to store it or do this complexity.",
      "range": {
        "startLine": 89,
        "startChar": 5,
        "endLine": 89,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71e4ae58_0bfaf545",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/DynamicBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 89,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "The exact logic comes from MediaCodecVideoEncoder.  There\u0027s some complexity I don\u0027t fully understand here.  I am not sure why we scale the deviation down but not up, for example.  I\u0027m inclined against trying to simplify away bits I don\u0027t fully understand.\n\nI\u0027d rather replicate exactly what the MediaCodecVideoEncoder does.  I see the following as non-obvious corner cases:\n - Deviation is clamped at +/- 3*target\n - Deviation is reset to +/- target whenever we adjust the exponent\n - Current deviation is scaled down proportional to the threshold if the bitrate decreases, but never scaled up when the bitrate increases\n\nI think it\u0027s harder to express all these direct manipulations of deviation if we track total actual bits expected and produced instead.",
      "parentUuid": "5a9523c3_e0791f9f",
      "range": {
        "startLine": 89,
        "startChar": 5,
        "endLine": 89,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e624e3d_e44e1697",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/FramerateBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "If you look at my comment about making this whole interface one method, this implementation would just be:\n\npublic int getAdjustedBps() {\n  if (targetFps \u003d\u003d 0) {\n    return targetBitrateBps;\n  }\n  return targetBitrateBps * 30 / fps;\n}",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 38,
        "endChar": 36
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c904870a_b6aefd34",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/FramerateBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "I must have missed the comment about making the whole interface one method.  Is it still relevant?",
      "parentUuid": "2e624e3d_e44e1697",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 38,
        "endChar": 36
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26b98355_dac30fa7",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/FramerateBitrateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-10T01:31:27Z",
      "side": 1,
      "message": "Yes, I though it could be one method until I realize it couldn\u0027t.  Please ignore.",
      "parentUuid": "c904870a_b6aefd34",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 38,
        "endChar": 36
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab37d769_717c79f7",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 1152084
      },
      "writtenOn": "2017-06-07T11:11:15Z",
      "side": 1,
      "message": "We have to support API level 16 in WebRTC. Can you make sure the necessary safe guards are in place?",
      "range": {
        "startLine": 27,
        "startChar": 1,
        "endLine": 27,
        "endChar": 10
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf0be87e_f675172a",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "I pulled this from MediaCodecVideoEncoder:  https://cs.chromium.org/chromium/src/third_party/webrtc/sdk/android/api/org/webrtc/MediaCodecVideoEncoder.java?l\u003d34\u0026rcl\u003d2149a54ecafd877efdc40e805e4492519b582562\n\nAPI 19 is required for MediaCodec.setParameters(), MediaCodec.PARAMETER_KEY_REQUEST_SYNC_FRAME, and MediaCodec.PARAMETER_KEY_VIDEO_BITRATE.  Are there a valid alternative?",
      "parentUuid": "ab37d769_717c79f7",
      "range": {
        "startLine": 27,
        "startChar": 1,
        "endLine": 27,
        "endChar": 10
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76659d28_7b221a27",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 1152084
      },
      "writtenOn": "2017-06-08T08:18:07Z",
      "side": 1,
      "message": "We do use the old class on older API levels so we just have to make sure this doesn\u0027t crash on older devices.",
      "parentUuid": "bf0be87e_f675172a",
      "range": {
        "startLine": 27,
        "startChar": 1,
        "endLine": 27,
        "endChar": 10
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abc3c62c_61a1d3e5",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-08T18:27:37Z",
      "side": 1,
      "message": "Since I\u0027m using the same constants and method calls as MediaCodecVideoEncoder, I believe it should work on the same devices.  That said, do we have an automated way to test it?  Or do I have to get my hands on some older devices and see if I can install/run it?",
      "parentUuid": "76659d28_7b221a27",
      "range": {
        "startLine": 27,
        "startChar": 1,
        "endLine": 27,
        "endChar": 10
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c44053c_e0682cad",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 1152084
      },
      "writtenOn": "2017-06-09T09:08:19Z",
      "side": 1,
      "message": "Unfortunately we don\u0027t have any trybots running older versions of Android at the moment. If you write a test for this class I can run the test on an older device though.",
      "parentUuid": "abc3c62c_61a1d3e5",
      "range": {
        "startLine": 27,
        "startChar": 1,
        "endLine": 27,
        "endChar": 10
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f2c9a3f_4d31da7d",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-12T16:24:30Z",
      "side": 1,
      "message": "This is the only example test I can find:  https://cs.chromium.org/chromium/src/third_party/webrtc/sdk/android/instrumentationtests/src/org/webrtc/MediaCodecVideoEncoderTest.java?rcl\u003d5c4d199d7c0358a9b8f35707e0f6de983d04232e\n\nI think I will need to write the factory before I can write a test, so that I can determine codec availability and create the HardwareVideoEncoder with the right arguments.\n\nThe factory is WIP.  I can add it and the test to this cl, or I can do them as a follow-up.",
      "parentUuid": "2c44053c_e0682cad",
      "range": {
        "startLine": 27,
        "startChar": 1,
        "endLine": 27,
        "endChar": 10
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "686d75dc_5764bd5a",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 34,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "Why does this have such a weird name?",
      "range": {
        "startLine": 34,
        "startChar": 57,
        "endLine": 34,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1396497c_02cb54b5",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 34,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "This is what it\u0027s named in OMX_Video.h, where the value came from.  We also named it this in MediaCodecVideoEncoder.  Naming it exactly the same thing in our code makes it easier to find the corresponding values.",
      "parentUuid": "686d75dc_5764bd5a",
      "range": {
        "startLine": 34,
        "startChar": 57,
        "endLine": 34,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06b779e8_272978da",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 58,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "Shouldn\u0027t this be called codecName?",
      "range": {
        "startLine": 58,
        "startChar": 28,
        "endLine": 58,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "783fe020_2e04e7cb",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 58,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "06b779e8_272978da",
      "range": {
        "startLine": 58,
        "startChar": 28,
        "endLine": 58,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba63351f_9801106e",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "Please split the comment so that each variable has a different comment.\n\nAnd this one should be called minKeyFrameRequestIntervalMs.",
      "range": {
        "startLine": 64,
        "startChar": 38,
        "endLine": 64,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d7861ba_8ab4c687",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba63351f_9801106e",
      "range": {
        "startLine": 64,
        "startChar": 38,
        "endLine": 64,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7a6b4cd_05b7987c",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 65,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "The comment of \"how long it\u0027s been since the last forced key frame\" doesn\u0027t match the logic or the name.  The logic is \"timestamp of frame that we were asked to encode at the time we decided to ask the codec to encode a key frame.\"  The name should be, perhaps, lastKeyFrameRequestPresentationTimestampMs.",
      "range": {
        "startLine": 65,
        "startChar": 30,
        "endLine": 65,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84a12a8c_99377e09",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 65,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "I adjusted the comment.  Do we really need to describe the entire logic of this variable in its name?  It\u0027s the timestamp of the last key frame, we just compute that timestamp from the presentation time when we requested a key frame from the codec, rather than a system timestamp and/or when the codec actually produces a key frame.\n\n(And we can\u0027t use when the codec produces a key frame, or when we reach the forcing threshold we\u0027ll request a key frame every frame until the first key frame pops out.)",
      "parentUuid": "d7a6b4cd_05b7987c",
      "range": {
        "startLine": 65,
        "startChar": 30,
        "endLine": 65,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84f23081_e266c8f3",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 69,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "This could use a comment.",
      "range": {
        "startLine": 69,
        "startChar": 46,
        "endLine": 69,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1340a91b_05f59de3",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 69,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "84f23081_e266c8f3",
      "range": {
        "startLine": 69,
        "startChar": 46,
        "endLine": 69,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efb16b28_d63e5ab1",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 73,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "This should be called outputThreadRunning;",
      "range": {
        "startLine": 73,
        "startChar": 43,
        "endLine": 73,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "988d9be4_1dc35098",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 73,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Hmm, I\u0027m inclined to leave this as just running.  I think of it as an indication of whether the encoder is running.  The output thread watches that state to determine when to quit.  I\u0027ve updated the comment to describe it better.",
      "parentUuid": "efb16b28_d63e5ab1",
      "range": {
        "startLine": 73,
        "startChar": 43,
        "endLine": 73,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b950fdbc_ecc6c6bf",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 81,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "This doesn\u0027t need to be a class member, I don\u0027t think.",
      "range": {
        "startLine": 81,
        "startChar": 29,
        "endLine": 81,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c5b5240_28f26530",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 81,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "The idea is if we somehow run out of queued input frames, we continue to use the last rotation we saw.\n\nI cargo-culted this pattern over from the C++ JNI layer, around here:  https://cs.chromium.org/chromium/src/third_party/webrtc/sdk/android/src/jni/androidmediaencoder_jni.cc?l\u003d1021\u0026rcl\u003d2149a54ecafd877efdc40e805e4492519b582562\n\nIt\u0027s probably not necessary, though, so I\u0027ll get rid of it.",
      "parentUuid": "b950fdbc_ecc6c6bf",
      "range": {
        "startLine": 81,
        "startChar": 29,
        "endLine": 81,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "14c4cc64_64c40fbb",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 83,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "This could use a comment.",
      "range": {
        "startLine": 83,
        "startChar": 41,
        "endLine": 83,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63892318_dc5e0976",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 83,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "14c4cc64_64c40fbb",
      "range": {
        "startLine": 83,
        "startChar": 41,
        "endLine": 83,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bfd7f20_f817d203",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 97,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "I think we should comment why we need both of these.  Why is one not sufficient?",
      "range": {
        "startLine": 97,
        "startChar": 52,
        "endLine": 97,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa7551fa_373de5bb",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 97,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3bfd7f20_f817d203",
      "range": {
        "startLine": 97,
        "startChar": 52,
        "endLine": 97,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7c310c0_0d7a7d13",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 100,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "This could probably be in a separate method, like startOutputThread and can stay null until initEncode is called.",
      "range": {
        "startLine": 100,
        "startChar": 38,
        "endLine": 100,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94857871_223667b1",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 100,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d7c310c0_0d7a7d13",
      "range": {
        "startLine": 100,
        "startChar": 38,
        "endLine": 100,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "658100d9_d053995b",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 109,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "If this thing starts threads, it seems like it should be called start() not init.",
      "range": {
        "startLine": 109,
        "startChar": 64,
        "endLine": 109,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "694e72c4_e6789afe",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 109,
      "author": {
        "id": 1152084
      },
      "writtenOn": "2017-06-07T11:11:15Z",
      "side": 1,
      "message": "I would prefer this be called init to align with the C++ API. https://cs.chromium.org/chromium/src/third_party/webrtc/api/video_codecs/video_encoder.h?q\u003dwebrtc::VideoEncoder+package:%5Echromium$\u0026l\u003d117",
      "parentUuid": "658100d9_d053995b",
      "range": {
        "startLine": 109,
        "startChar": 64,
        "endLine": 109,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97b342e8_3dfed0ef",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 109,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "694e72c4_e6789afe",
      "range": {
        "startLine": 109,
        "startChar": 64,
        "endLine": 109,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29afe333_0000903c",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 129,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "Why does this have such a strange name?  And why are all the of the keys a named constant except for this one?",
      "range": {
        "startLine": 129,
        "startChar": 67,
        "endLine": 129,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9993992_6afc5b94",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 129,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "I gave it a constant, but it doesn\u0027t get a MediaFormat const until API level 21, so we have to use our own. :(",
      "parentUuid": "29afe333_0000903c",
      "range": {
        "startLine": 129,
        "startChar": 67,
        "endLine": 129,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "061b84af_e309258b",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 147,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "And this should be called stop, not release.",
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdbedd05_d5005f8d",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 147,
      "author": {
        "id": 1152084
      },
      "writtenOn": "2017-06-07T11:11:15Z",
      "side": 1,
      "message": "I would prefer this be called release to align with the C++ API.",
      "parentUuid": "061b84af_e309258b",
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90aa3760_adf624a7",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 147,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "fdbedd05_d5005f8d",
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "15c8d31d_87b06c63",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 171,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "Shouldn\u0027t we return a bool to let the caller know the frame was dropped?",
      "range": {
        "startLine": 171,
        "startChar": 13,
        "endLine": 171,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57cdc335_2da72d60",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 171,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "We\u0027ll return a status enum I think, per discussion with Sami.  But I need to make changes elsewhere first, so leaving this open for now.",
      "parentUuid": "15c8d31d_87b06c63",
      "range": {
        "startLine": 171,
        "startChar": 13,
        "endLine": 171,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "694a2a3e_c7b67db2",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 171,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-08T18:27:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "57cdc335_2da72d60",
      "range": {
        "startLine": 171,
        "startChar": 13,
        "endLine": 171,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d4b9695_9628bfd8",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 183,
      "author": {
        "id": 1152084
      },
      "writtenOn": "2017-06-07T11:11:15Z",
      "side": 1,
      "message": "Support for texture frames has to be added before this can be used by WebRTC.",
      "range": {
        "startLine": 183,
        "startChar": 56,
        "endLine": 183,
        "endChar": 62
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc7888f1_1d9a1c23",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 183,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Ack.  Quartc does not currently do texture frames, but we\u0027ll probably want them there as well.  Added a TODO for now.",
      "parentUuid": "4d4b9695_9628bfd8",
      "range": {
        "startLine": 183,
        "startChar": 56,
        "endLine": 183,
        "endChar": 62
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1a258b5_8e6ad98b",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 187,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "Why is this way up here and not down where it is actually used?",
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6b5edf4_6d101bf7",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 187,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e1a258b5_8e6ad98b",
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70996c84_0ca15738",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 198,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "This seems like it should be a separate method:  fillBuffer(buffer, colorFormat, i420)",
      "range": {
        "startLine": 198,
        "startChar": 14,
        "endLine": 198,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6661286_4b69fa65",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 198,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "70996c84_0ca15738",
      "range": {
        "startLine": 198,
        "startChar": 14,
        "endLine": 198,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66d0cf01_dcf59faf",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 201,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "This SUPPORTED_COLOR_FORMATS thing seems kind of silly.  We could do something like this instead for fillBuffer:\n\n\n    switch (colorFormat) {\n      case MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV420Planar:\n        if (buffer) {\n          fillBufferNv12(buffer, i420.getDataY(), i420.getDataU(), i420.getDataV());\n        }\n        return true;\n      case MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV420SemiPlanar:\n      case MediaCodecInfo.CodecCapabilities.COLOR_QCOM_FormatYUV420SemiPlanar:\n      case COLOR_QCOM_FORMATYUV420PackedSemiPlanar32m:\n        if (buffer) {\n          fillBufferI420(buffer, i420.getDataY(), i420.getDataU(), i420.getDataV());\n        }\n        return true;\n      default:\n        return false;\n    }\n\nAnd then also have \n\nboolean supportsColorFormat(colorFormat) {\n  return fillBuffer(null, colorFormat, null);\n}\n\n\nAnd then use supportsColorFormat instead of SUPPORTED_COLOR_FORMATS.contains.   It\u0027s faster, \n simpler, and can\u0027t get out of sync.",
      "range": {
        "startLine": 201,
        "startChar": 9,
        "endLine": 201,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f87e6e5_01f8d0ba",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 201,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "I like that.  Done.",
      "parentUuid": "66d0cf01_dcf59faf",
      "range": {
        "startLine": 201,
        "startChar": 9,
        "endLine": 201,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6de1a47c_255624dc",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 215,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "This whole setKeyFrame code seems way too complicated.  And it doesn\u0027t help that this method has a vague name.  Perhaps it should be maybeRequestKeyFrame?  But I think it would be more clear to say something like?\n\nif (requestedKeyFrame) {\n  Logging.d(TAG, \"Key frame requested\");\n  setCodecKeyFrameRequest(); \n  lastKeyFrameMs \u003d presentationTimestampMs;\n} else if (forcedKeyFrame(presentationTimestampUs)) {\n  Logging.d(TAG, \"Key frame forced\");\n  setCodecKeyFrameRequest(); \n  lastKeyFrameMs \u003d presentationTimestampMs;\n}",
      "range": {
        "startLine": 215,
        "startChar": 0,
        "endLine": 215,
        "endChar": 60
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4838fd2_490947a9",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 215,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6de1a47c_255624dc",
      "range": {
        "startLine": 215,
        "startChar": 0,
        "endLine": 215,
        "endChar": 60
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26aed149_8fd7a201",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 234,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "Why don\u0027t we allow higher frame rates.  I would like to try 60fps!",
      "range": {
        "startLine": 234,
        "startChar": 5,
        "endLine": 234,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f3ba023_547a08ab",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 234,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "When existing code sets a bound on something, I\u0027m inclined to preserve it:\n\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/sdk/android/src/jni/androidmediaencoder_jni.cc?l\u003d65\u0026rcl\u003d2149a54ecafd877efdc40e805e4492519b582562",
      "parentUuid": "26aed149_8fd7a201",
      "range": {
        "startLine": 234,
        "startChar": 5,
        "endLine": 234,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2c5c87a_b9dcbf6b",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 251,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "Why do we add this 500?  To get ceil?",
      "range": {
        "startLine": 251,
        "startChar": 74,
        "endLine": 251,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3bd2eddf_6a6481ea",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 251,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "To round to the nearest millisecond.",
      "parentUuid": "e2c5c87a_b9dcbf6b",
      "range": {
        "startLine": 251,
        "startChar": 74,
        "endLine": 251,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfd1edc9_6d70507b",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 259,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "boolean x \u003d false;\nif (y) {\n  x \u003d true;\n}\n\n\nCan be simplified to:\n\nboolean x \u003d y;",
      "range": {
        "startLine": 259,
        "startChar": 5,
        "endLine": 259,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd538d54_912e8991",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 259,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dfd1edc9_6d70507b",
      "range": {
        "startLine": 259,
        "startChar": 5,
        "endLine": 259,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "09ee3b9f_e74151d4",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 260,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "Could use an early return:\n\nif (!requestedKeyFrame \u0026\u0026 !forcedKeyFrame) {\n  return;\n}\n...",
      "range": {
        "startLine": 260,
        "startChar": 46,
        "endLine": 260,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec357d47_93fff56a",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 260,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "09ee3b9f_e74151d4",
      "range": {
        "startLine": 260,
        "startChar": 46,
        "endLine": 260,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7581dbe_494687e2",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 269,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "Or better yet:\n\nif (requestedKeyFrame) {\n  Logging.d(TAG, \"Key frame requested\");\n  setCodecKeyFrameRequest(); \n  lastKeyFrameMs \u003d presentationTimestampMs;\n  return;\n}\nif (forcedKeyFrame) {\n  Logging.d(TAG, \"Key frame forced\");\n  setCodecKeyFrameRequest(); \n  lastKeyFrameMs \u003d presentationTimestampMs;\n  return;\n}",
      "range": {
        "startLine": 269,
        "startChar": 7,
        "endLine": 269,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82ac2b84_cf18bf4b",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 269,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done (or at least something similar)",
      "parentUuid": "c7581dbe_494687e2",
      "range": {
        "startLine": 269,
        "startChar": 7,
        "endLine": 269,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "adb0aec7_1f9cc227",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 277,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "This should go in it\u0027s own method, perhaps setCodecKeyFrameRequest",
      "range": {
        "startLine": 277,
        "startChar": 7,
        "endLine": 277,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a614c64c_5b4e63ee",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 277,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "adb0aec7_1f9cc227",
      "range": {
        "startLine": 277,
        "startChar": 7,
        "endLine": 277,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffebe5bd_cfe5f2fd",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 283,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "It seems like the loop should go into \"run\" and let there be a method that does one step in the loop.",
      "range": {
        "startLine": 283,
        "startChar": 21,
        "endLine": 283,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed2737d9_8b11bad4",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 283,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ffebe5bd_cfe5f2fd",
      "range": {
        "startLine": 283,
        "startChar": 21,
        "endLine": 283,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "264540db_32e0b5b2",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 287,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "This could use an early continue;\n\nif (index \u003c 0) {\n  continue;\n}\n...",
      "range": {
        "startLine": 287,
        "startChar": 25,
        "endLine": 287,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31201f57_bad1d327",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 287,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "264540db_32e0b5b2",
      "range": {
        "startLine": 287,
        "startChar": 25,
        "endLine": 287,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94267a9d_b4bc25c0",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 289,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "It would be more clear if we called this thing codecOutputBuffer.  \"buffer\" is too vague around here.",
      "range": {
        "startLine": 289,
        "startChar": 62,
        "endLine": 289,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18a0dcf0_cc9105df",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 289,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "94267a9d_b4bc25c0",
      "range": {
        "startLine": 289,
        "startChar": 62,
        "endLine": 289,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68327496_1363f3ed",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 293,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "Why do we call it a \"isConfigFrame\" when it\u0027s not a frame at all?  Shouldn\u0027t we call this isConfigBuffer?  In fact, why do we even name it instead of just putting it inline?",
      "range": {
        "startLine": 293,
        "startChar": 30,
        "endLine": 293,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9039e348_d79c7aa4",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 293,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "68327496_1363f3ed",
      "range": {
        "startLine": 293,
        "startChar": 30,
        "endLine": 293,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e24a6f38_ddb949b0",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 297,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "This could use an early continue:\n\nif (isConfigFrame) {\n  Logging.d(\n     TAG, \"Config frame generated. Offset: \" + info.offset + \". Size: \" + info.size);\n  configBuffer \u003d ByteBuffer.allocateDirect(info.size);\n  configBuffer.put(buffer);  \n  codec.releaseOutputBuffer(index, false);\n  continue;\n}\n...",
      "range": {
        "startLine": 297,
        "startChar": 37,
        "endLine": 297,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d2a0606_8f0d4de8",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 297,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Early continue (or return now) requires duplicating the releaseOutputBuffer() call into both branches.  This is the perfect case for *not* doing an early-return, IMHO.  Do one of these branches then execute the cleanup.",
      "parentUuid": "e24a6f38_ddb949b0",
      "range": {
        "startLine": 297,
        "startChar": 37,
        "endLine": 297,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9953569c_c149ce33",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 301,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "With my other suggested comments, this would be:\n\nrateAdjuster.reportActual(info.size * 8, 1000.0 / targetFps);\n\nAlthough I think it would be more accurate to keep the delta from the last frame to this one and use that rather than \"1000.0 / targetFps\".",
      "range": {
        "startLine": 301,
        "startChar": 13,
        "endLine": 301,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51d2f2a9_62cc0608",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 301,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Using target fps instead of actual timestamps or system times is what we have in MediaCodecVideoEncoder.\n\nAt the moment, we need to pass fps into the adjuster for the purposes of both the framerate-based adjuster and for this computation, so I\u0027m not sure that reporting a time with the number of bits is that useful.",
      "parentUuid": "9953569c_c149ce33",
      "range": {
        "startLine": 301,
        "startChar": 13,
        "endLine": 301,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6fcd9177_77836013",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 305,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "Why do we do a mime type check instead of just checking if configBuffer is null or not?",
      "range": {
        "startLine": 305,
        "startChar": 64,
        "endLine": 305,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8b99817_425dd092",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 305,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "This is equivalent to what MediaCodecVideoEncoder does here:\n\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/sdk/android/api/org/webrtc/MediaCodecVideoEncoder.java?l\u003d734\u0026rcl\u003d2149a54ecafd877efdc40e805e4492519b582562\n\nNote that we *could* populate the config data for other codec types, we just don\u0027t do anything with it unless we\u0027re processing H.264.  I suspect that other codecs won\u0027t produce config frames, but I\u0027d rather keep the check in place.  If H.264 is the only thing that ever uses it, then either check should be equivalent.",
      "parentUuid": "6fcd9177_77836013",
      "range": {
        "startLine": 305,
        "startChar": 64,
        "endLine": 305,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19bbf708_5209a9c2",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 308,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "Isn\u0027t it prepending, not appending?",
      "range": {
        "startLine": 308,
        "startChar": 96,
        "endLine": 308,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9fc888a8_d0d994e2",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 308,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "You are correct.  I copied a lot of logging and comments from MediaCodecVideoEncoder.",
      "parentUuid": "19bbf708_5209a9c2",
      "range": {
        "startLine": 308,
        "startChar": 96,
        "endLine": 308,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94225b91_49f46970",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 309,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "Again, isn\u0027t it prepending, not appending?",
      "range": {
        "startLine": 309,
        "startChar": 74,
        "endLine": 309,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b322f21_416a7dbc",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 309,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "94225b91_49f46970",
      "range": {
        "startLine": 309,
        "startChar": 74,
        "endLine": 309,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61785cb1_12437513",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 312,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "It seems like a helper method of frameBuffer \u003d copyBuffers(configBuffer, codecOutputBuffer), where copyBuffer is defined as copyBuffers(prefixBuffer, suffixBuffer) and prefixBuffer can be null.",
      "range": {
        "startLine": 312,
        "startChar": 44,
        "endLine": 312,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00466779_14e0f69d",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 312,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "I don\u0027t know.  I tried that and the helper is as much or more code than just doing this directly.  It saves a couple of lines here (the calls to allocateDirect and rewind) and adds 10-15 lines in a helper.  The puts are replaced by calls to copyBuffers.\n\nI really don\u0027t like Java\u0027s ByteBuffer abstraction, but I think in this instance adding our own does not help.",
      "parentUuid": "61785cb1_12437513",
      "range": {
        "startLine": 312,
        "startChar": 44,
        "endLine": 312,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8cccb0ff_8889bc68",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 322,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "This is weird.  We keep an extra queue on the side of the entire video frame just to remember what the rotation was?  This could definitely use a comment explaining this, and it would make sense to have a simpler thing to put into the queue.  In fact, you could put a pre-filled EncodedImage.builder() that only lacks a frameBuffer.  Then you can pull it out of the queue, call setBuffer(frameBuffer).createEncodedImage().",
      "range": {
        "startLine": 322,
        "startChar": 13,
        "endLine": 322,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0508398_0e2169d2",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 322,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8cccb0ff_8889bc68",
      "range": {
        "startLine": 322,
        "startChar": 13,
        "endLine": 322,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2474ef58_fa6cd21c",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 341,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "Can we move this code into a synchronous dequeueEncodedImage and then run that in the loop while calling the callback?  Then we can separate the dequeue logic from the thread running.",
      "range": {
        "startLine": 341,
        "startChar": 68,
        "endLine": 341,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f53e5fe_6286ba0d",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 341,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "I would definitely do that, but a single call to this method will never guarantee a return value.  If we push the callback into the thread\u0027s run() method, it will look like:\n\nwhile (running) {\n  EncodedImage image \u003d dequeueEncodedImage();\n  if (image !\u003d null) {\n    callback.onEncodedImage(...);\n  }\n}\n\nI slightly prefer simply invoking the callback here, where we\u0027re in the branch where we know it needs to be called, rather than returning nulls and doing extra checks in the thread.\n\nI also suspect we\u0027ll need to construct a non-trivial CodecSpecificInfo, and I\u0027m not sure it makes sense to push that into the thread\u0027s run().  So we\u0027d need an out-argument or a return-value struct....  Basically I think it\u0027s more complex to do it that way.",
      "parentUuid": "2474ef58_fa6cd21c",
      "range": {
        "startLine": 341,
        "startChar": 68,
        "endLine": 341,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac3212c3_048fefd7",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 363,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "Seems like this should be in a separate method called releaseCodec.",
      "range": {
        "startLine": 363,
        "startChar": 41,
        "endLine": 363,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b6e1733_cfbfb793",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 363,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ac3212c3_048fefd7",
      "range": {
        "startLine": 363,
        "startChar": 41,
        "endLine": 363,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f39902f_5e4dafa6",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 366,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "It seems like this should be called setCodecBitrate(bps) and take a parameter.  Then just pass rateAdjuster.getAdjustedBps() whenever calling setEncoderBitrate.",
      "range": {
        "startLine": 366,
        "startChar": 32,
        "endLine": 366,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d53b5082_6f54bd6e",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 366,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Since HardwareVideoEncoder now tracks the adjusted bitrate, too, we need to set that to the adjusted rate and set the codec parameters.  Does it make sense to do this at both callsites, or once in this method?",
      "parentUuid": "0f39902f_5e4dafa6",
      "range": {
        "startLine": 366,
        "startChar": 32,
        "endLine": 366,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2d160b8_cbdc43f1",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/NoOpRateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 14,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "You could probably make this into BaseRateAdjuster and then inherit from it to get common logic of storing the target bitrate and gps.",
      "range": {
        "startLine": 14,
        "startChar": 48,
        "endLine": 14,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad567d75_d9bef466",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/NoOpRateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 14,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b2d160b8_cbdc43f1",
      "range": {
        "startLine": 14,
        "startChar": 48,
        "endLine": 14,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a5bd55c_441af366",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/NoOpRateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "These ought to be targetBps and targetFps.",
      "range": {
        "startLine": 16,
        "startChar": 22,
        "endLine": 16,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3727b6f_4add8aa6",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/NoOpRateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a5bd55c_441af366",
      "range": {
        "startLine": 16,
        "startChar": 22,
        "endLine": 16,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a95e0a4c_c5a7ad86",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/RateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 14,
      "author": {
        "id": 1152084
      },
      "writtenOn": "2017-06-07T11:11:15Z",
      "side": 1,
      "message": "nit: I would prefer BitrateAdjuster",
      "range": {
        "startLine": 14,
        "startChar": 10,
        "endLine": 14,
        "endChar": 22
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "614d8fe2_859e3998",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/RateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 14,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a95e0a4c_c5a7ad86",
      "range": {
        "startLine": 14,
        "startChar": 10,
        "endLine": 14,
        "endChar": 22
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41b66b17_ab80b423",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/RateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "You mean if getBitrateBps() changed?  Why not just let the caller check to see if it changed?  It\u0027s less burden on the implementation.",
      "range": {
        "startLine": 17,
        "startChar": 17,
        "endLine": 17,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb7cedc2_5a0f5b23",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/RateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "41b66b17_ab80b423",
      "range": {
        "startLine": 17,
        "startChar": 17,
        "endLine": 17,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e0cba973_5f656ffe",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/RateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "It seems like the methods should be called:\n\nsetTargets(targetBps, targetFps);\nreportActual(actualBits, actualTimeSpanMs);\ngetAdjustedBps();",
      "range": {
        "startLine": 27,
        "startChar": 22,
        "endLine": 27,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08c4a33b_3b6b3f5e",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/RateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "Done for setTargets and getAdjusted*, but I\u0027m not sure your suggested reportActual has the right signature.  For what it does, reportEncodedFrame makes more sense to me.",
      "parentUuid": "e0cba973_5f656ffe",
      "range": {
        "startLine": 27,
        "startChar": 22,
        "endLine": 27,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5436fd5b_530d62f2",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/RateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 30,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2017-06-07T08:02:00Z",
      "side": 1,
      "message": "Why is this needed?  It\u0027s never adjusted.",
      "range": {
        "startLine": 30,
        "startChar": 21,
        "endLine": 30,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c49fb7d0_a91619c3",
        "filename": "webrtc/sdk/android/src/java/org/webrtc/RateAdjuster.java",
        "patchSetId": 6
      },
      "lineNbr": 30,
      "author": {
        "id": 1187699
      },
      "writtenOn": "2017-06-07T23:45:49Z",
      "side": 1,
      "message": "It is adjusted *once*, on init, by the FramerateBitrateAdjuster, which sets the initial framerate to 30 FPS and then makes bitrate adjustments based on that if the framerate changes.  That\u0027s the behavior in MediaCodecVideoEncoder:\n\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/sdk/android/api/org/webrtc/MediaCodecVideoEncoder.java?l\u003d420\u0026rcl\u003d2149a54ecafd877efdc40e805e4492519b582562\n\nThe current behavior does seem a little strange to me.  I do not quite understand why it sets a fixed initial framerate instead of recording the initial framerate and adjusting from there.  I would guess some hardware codecs assume they\u0027ll always be handed 30 FPS.  But it also seems like we\u0027d end up with a mismatch between the expected and actual framerates immediately, unless something follows up initEncode() with a call to setRates().\n\nSami might understand this better.  For my part, I have tried to replicate existing behavior.  But it is of course worth questioning whether unusual behavior is correct.",
      "parentUuid": "5436fd5b_530d62f2",
      "range": {
        "startLine": 30,
        "startChar": 21,
        "endLine": 30,
        "endChar": 0
      },
      "revId": "4220019dcc0d6f0bf338151ed1889b53e7c34de8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}